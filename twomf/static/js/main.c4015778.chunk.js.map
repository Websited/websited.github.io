{"version":3,"sources":["actions/authUser.ts","utils/helpers.ts","utils/firebase.ts","utils/credentials.ts","actions/members.ts","actions/teams.ts","components/AnonymousDialog/AnonymousDialog.tsx","components/AnonymousDialog/LoadingIndicator.tsx","components/AnonymousDialog/ForgotPasswordBody.tsx","components/AnonymousDialog/PasswordRecoveryBody.tsx","components/AnonymousDialog/SignInBody.tsx","components/AnonymousDialog/SignUpBody.tsx","actions/selection.ts","components/Header/Header.tsx","components/HomePage/WheelIcon.tsx","components/HomePage/HomePage.tsx","components/Guide/Guide.tsx","components/WheelOfMisfortune/WheelOfMisfortune.tsx","components/WheelOfMisfortune/Placeholder.tsx","components/WheelOfMisfortune/Triangle.tsx","components/WheelOfMisfortune/utils.ts","components/MainApp/utils.ts","components/MainApp/MainApp.tsx","components/WheelOfMisfortune/useSelection.tsx","components/TeamsDrawer/DrawerSignUpContent.tsx","components/TabContent/TabContent.tsx","components/TeamsDrawer/DrawerListWrapper.tsx","components/TeamsDrawer/DrawerMembersListItem.tsx","components/TeamsDrawer/DrawerMembersList.tsx","components/TeamsDrawer/DrawerTeamsListItem.tsx","components/TeamsDrawer/utils.ts","components/TeamsDrawer/MembersTransferList.tsx","components/TeamsDrawer/DrawerTeamsList.tsx","components/TeamsDrawer/DrawerUserContent.tsx","components/TeamsDrawer/TeamsDrawer.tsx","App.tsx","actions/shared.ts","middleware/index.ts","middleware/logger.ts","reducers/members.ts","reducers/selection.ts","reducers/teams.ts","reducers/index.ts","reducers/authUser.ts","serviceWorker.ts","index.tsx"],"names":["AuthUserActionType","signOut","type","UnsetAuthedUser","payload","generateUniqueId","Math","random","toString","substr","Date","getTime","noop","transformCollection","collection","docs","reduce","agg","curr","currentDocument","data","Object","assign","id","removeMemberFromTeams","teams","memberToRemove","entries","teamAgg","teamId","team","newTeamMembers","members","filter","memberId","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","MembersActionType","auth","firestore","firebaseGenerateUserDocument","user","additionalData","a","userRef","doc","uid","get","exists","email","set","console","error","firebaseGetUserDocument","userDocument","userMembers","userTeams","firebaseAddEntry","entry","key","then","catch","entryRef","document","merge","TeamActionType","addMemberToDB","authedUser","firstName","lastName","dispatch","member","AddMember","addMember","removeMemberFromDB","delete","Promise","all","newTeams","forEach","ref","firebaseRemoveMember","removedUserId","memberid","RemoveMember","ModalView","addTeamToDB","teamName","AddTeam","removeTeamFromDB","firebaseRemoveTeam","RemoveTeam","manageTeamMembersInDB","firebaseModifyMembers","ManageTeamMembers","manageTeamMembers","LoadingIndicator","className","CircularProgress","ForgotPasswordBody","onSetModalView","onClose","mounted","useState","showLoadingIndicator","setShowLoadingIndicator","setEmail","emailError","setEmailError","Fragment","DialogTitle","DialogContent","DialogContentText","onSubmit","event","preventDefault","sendPasswordResetEmail","PasswordRecovery","message","TextField","value","margin","label","fullWidth","helperText","onChange","currentTarget","Button","classes","root","color","disabled","variant","onClick","SignUp","SignIn","DialogActions","PasswordRecoveryBody","SignInBody","password","setPassword","signInError","setSignInError","onChangeHandler","handleSignIn","signInWithEmailAndPassword","isFormCorrect","useMemo","ForgotPassword","SignUpBody","name","setName","repeatedPassword","setRepeatedPassword","passwordError","setPasswordError","handleSignUp","createUserWithEmailAndPassword","displayName","code","includes","verifiedPassword","passwordHelperText","SelectionType","SelectionActionType","AnonymousDialog","isOpen","modalView","setModalView","useEffect","Dialog","disableBackdropClick","disableEscapeKeyDown","open","paper","renderContent","Header","onToggleDrawer","onShowLoginModal","onLogOut","authUser","useSelector","state","AppBar","position","Toolbar","IconButton","edge","Menu","Typography","WheelIcon","props","xmlns","height","viewBox","width","d","data-original","data-old_color","fill","HomePage","Container","Grid","container","item","xs","sm","component","Guide","gutterBottom","SettingType","receiveSelection","selection","ReceiveSelection","Placeholder","Triangle","color1","color2","x","y","enableBackground","version","xmlSpace","randomInt","min","max","floor","WheelOfMisfortune","participants","hasBeenSpinned","setHasBeenSpinned","duration","setDuration","spins","setSpins","winWheelRef","useRef","canvasRef","reset","current","stopAnimation","setSliderValue","settingType","Winwheel","canvasId","outerRadius","textFontSize","textAlignment","numSegments","length","segments","animation","easing","pins","number","fillStyle","Slider","valueLabelDisplay","_event","Duration","Spins","startAnimation","colors","getRandomColor","colorsCount","randomColorNumber","prepareParticipantsData","array","acc","_curr","i","j","temp","map","participant","text","MainApp","selectionData","selectionType","Members","Teams","selectedMembers","teamMembers","membersToAdd","useSelection","participantsData","DrawerSignUpContent","closeButton","TabContent","children","index","DrawerListWrapper","addButtonLabel","onRenderAddDialogContent","onClearData","isFormOpen","setIsFormOpen","handleClose","startIcon","Add","DrawerMembersListItem","onPrimaryAction","selected","onDeleteAction","ListItem","button","ListItemIcon","Checkbox","checked","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","Delete","DrawerMembersList","setFirstName","setLastName","useDispatch","handleAddUser","autoFocus","ListSubheader","List","values","memberIndex","newSelection","handleSelectUser","DrawerTeamsListItem","onManageMembers","isListOpen","setIsListOpen","isRemovalClicked","setIsRemovalClicked","React","anchorEl","setAnchorEl","secondary","e","stopPropagation","ExpandLess","ExpandMore","MoreVert","keepMounted","MenuItem","GroupAdd","fontSize","Warning","Collapse","in","timeout","unmountOnExit","disablePadding","dense","memberLabel","Person","not","b","indexOf","intersection","MembersTransferList","activeTeam","setChecked","activeTeamMembers","allMembers","keys","availableMembers","availableMembersChecked","activeTeamMembersChecked","numberOfChecked","items","handleToggleAll","customList","title","Card","CardHeader","avatar","indeterminate","inputProps","subheader","Divider","role","currentIndex","newChecked","push","splice","spacing","justify","alignItems","direction","size","newMembers","ChevronRight","ChevronLeft","DrawerTeamsList","setTeamName","setActiveTeam","handleAddTeam","target","teamIndex","handleSelectTeam","DrawerUserContent","Paper","square","Tabs","indicatorColor","textColor","_e","tabValue","ChangeSelectionType","Tab","Group","TeamsDrawer","anchor","renderCloseButton","Close","Drawer","AppWrapper","isDrawerVisible","isModalVisible","handleToggleDrawer","setState","handleShowLoginModal","handleLogOut","this","onAuthStateChanged","authUserData","SetAuthedUser","ReceiveMembers","ReceiveTeams","Component","App","connect","middleware","applyMiddleware","thunk","store","next","action","group","log","returnValue","getState","groupEnd","initialMembersState","initialSelectionState","initialTeamsState","rootReducer","combineReducers","rest","Boolean","window","location","hostname","match","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uNAUYA,E,wGAAAA,K,8BAAAA,E,mCAAAA,M,KAiBL,IAKMC,EAAU,iBAA8B,CACjDC,KAAMF,EAAmBG,gBACzBC,QAAS,O,iFC9BAC,EAAmB,WAC5B,OAAOC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAAK,KAAM,IAAIC,MAAOC,UAAUH,YAEnEI,EAAO,aAIPC,EAAsB,SAC/BC,GAEA,OAAOA,EAAWC,KAAKC,QAAO,SAACC,EAAKC,GAChC,IAAMC,EAAkBD,EAAKE,OAC7B,OAAOC,OAAOC,OAAOL,EAAdI,OAAA,IAAAA,CAAA,GAAsBF,EAAgBI,GAAKJ,MACnD,KAGMK,EAAwB,SAACC,EAAcC,GAChD,OAAOL,OAAOM,QAAQF,GAAOT,QAAO,SAACY,EAAD,GAA8B,IAAD,mBAAlBC,EAAkB,KAAVC,EAAU,KACvDC,EAAiBD,EAAKE,QAAQC,QAAO,SAAAC,GAAQ,OAAIA,IAAaR,KACpE,OAAOL,OAAOC,OAAOM,EAAdP,OAAA,IAAAA,CAAA,GACFQ,EADER,OAAA,IAAAA,CAAA,GAEIS,EAFJ,CAGCE,QAASD,QAGlB,KCTPI,IAASC,cCpBqB,CAC1BC,OAAQ,0CACRC,WAAY,6CACZC,YAAa,oDACbC,UAAW,6BACXC,cAAe,yCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBDaZ,IENKC,EFMCC,EAAOX,IAASW,OAChBC,EAAYZ,IAASY,YAErBC,EAA4B,uCAAG,WACxCC,EACAC,GAFwC,iBAAAC,EAAA,yDAI3B,OAATF,EAJoC,wDAOlCG,EAAUL,EAAUM,IAAV,gBAAuBJ,EAAKK,MAPJ,SAQjBF,EAAQG,MARS,iBAS1BC,OAT0B,wBAU5BC,EAAUR,EAAVQ,MAV4B,mBAY1BL,EAAQM,IAAR,aACFD,SACGP,IAdyB,0DAiBhCS,QAAQC,MAAM,+BAAd,MAjBgC,iCAoBjCC,EAAwBZ,EAAKK,MApBI,0DAAH,wDAuBnCO,EAAuB,uCAAG,WAAOP,GAAP,mBAAAH,EAAA,yDACvBG,EADuB,yCAEjB,MAFiB,gCAKGP,EAAUM,IAAV,gBAAuBC,IAAOC,MALjC,cAKlBO,EALkB,gBAMEf,EAAUjC,WAAV,gBAA8BwC,EAA9B,aAA6CC,MAN/C,cAMlBQ,EANkB,iBAOAhB,EAAUjC,WAAV,gBAA8BwC,EAA9B,WAA2CC,MAP3C,eAOlBS,EAPkB,sCASpBV,MACAtB,QAASnB,EAAoBkD,GAC7BtC,MAAOZ,EAAoBmD,IACxBF,EAAa1C,SAZI,yCAexBuC,QAAQC,MAAM,8BAAd,MAfwB,kBAgBjB,MAhBiB,0DAAH,sDA0BtB,SAASK,EACZhB,EACAiB,EACAC,GAGA,OADiBpB,EAAUjC,WAAV,gBAA8BmC,EAAKK,IAAnC,YAA0Ca,IAAOd,IAAIa,EAAM3C,IAEvEmC,IAAIQ,GACJE,MAAK,kBAAMF,KACXG,OAAM,SAACT,GAEJ,OADAD,QAAQC,MAAMA,GACP,Q,4CAIZ,WAAqCX,EAAgBpB,EAAgBG,GAArE,iBAAAmB,EAAA,6DACGmB,EAAWvB,EAAUjC,WAAV,gBAA8BmC,EAAKK,IAAnC,WAAgDD,IAAIxB,GADlE,SAEoByC,EAASf,MAF7B,UAEGgB,EAFH,OAGeA,EAASnD,OAHxB,0EAOIkD,EACFZ,IACG,CACI1B,WAEJ,CAAEwC,OAAO,IAEZH,OAAM,SAACT,GAEJ,OADAD,QAAQC,MAAMA,GACPA,MAhBZ,4C,gCEzEKf,K,gCAAAA,E,sBAAAA,E,6BAAAA,M,KAuBL,ICvBK4B,EDiCCC,EAAgB,SACzBC,EACAC,EACAC,GAHyB,OAI2B,SAACC,GACrD,IAAMvD,EAAKlB,IAEX,OAAO4D,EAAiBU,EADE,CAAEpD,KAAIqD,YAAWC,YACI,WAC1CT,MAAK,SAACW,GACCA,GACAD,EAfS,SAACC,GAAD,MAAsC,CAC3D7E,KAAM2C,EAAkBmC,UACxB5E,QAAS2E,GAaYE,CAAUF,OAG1BV,OAAM,SAACT,GACJD,QAAQC,MAAM,sBAAuBA,QASpCsB,EAAqB,SAC9BP,EACApD,GAF8B,OAGsB,SAACuD,GACrD,OF6CG,SAA8B7B,EAAgB1B,GACjD,IAAMwC,EAAchB,EAAUjC,WAAV,gBAA8BmC,EAAKK,IAAnC,aAAkDD,IAAI9B,GAAI4D,SACxEnB,EAAYjB,EAAUjC,WAAV,gBAA8BmC,EAAKK,IAAnC,WAAgDC,MAElE,OAAO6B,QAAQC,IAAI,CAACtB,EAAaC,IAC5BI,MAAK,YAAwB,IAAD,mBAAX3C,GAAW,WACnB6D,EAAW9D,EAAsBX,EAAoBY,GAAiBF,GAC5EE,EAAM8D,SAAQ,SAACzD,GACXA,EAAK0D,IACA9B,IAAI4B,EAASxD,EAAKP,KAClB6C,MAAK,WACF,OAAO7C,KAEV8C,OAAM,SAACT,GAEJ,OADAD,QAAQC,MAAR,iCAAwCrC,EAAxC,uBAAyDO,EAAKP,IAAMqC,GAC7DA,WAItBQ,MAAK,kBAAM7C,KACX8C,OAAM,SAACT,GAEJ,OADAD,QAAQC,MAAM,wBAAyBA,GAChC,QEnER6B,CAAqBd,EAAYpD,GACnC6C,MAAK,SAACsB,GAVa,IAACC,EAWbD,GACAZ,GAZaa,EAYSD,EAZiC,CACnExF,KAAM2C,EAAkB+C,aACxBxF,QAASuF,QAaJtB,OAAM,SAACT,GACJD,QAAQC,MAAM,sBAAuBA,S,SCnErCa,K,4BAAAA,E,kBAAAA,E,wBAAAA,E,wCAAAA,M,KAoCL,IC5CKoB,EDsDCC,EAAc,SACvBnB,EACAoB,GAFuB,OAG2B,SAACjB,GACnD,IAAMvD,EAAKlB,IAEX,OAAO4D,EAAiBU,EADF,CAAEpD,KAAIwE,WAAU/D,QAAS,IACF,SACxCoC,MAAK,SAACW,GAZQ,IAACjD,EAaRiD,GACAD,GAdQhD,EAcSiD,EAdsB,CACnD7E,KAAMuE,EAAeuB,QACrB5F,QAAS0B,QAeJuC,OAAM,SAACT,GACJD,QAAQC,MAAM,sBAAuBA,QASpCqC,EAAmB,SAC5BtB,EACApD,GAF4B,OAGsB,SAACuD,GACnD,OHqBG,SAA4B7B,EAAgB1B,GAC/C,OAAOwB,EACFjC,WADE,gBACkBmC,EAAKK,IADvB,WAEFD,IAAI9B,GACJ4D,SACAf,MAAK,kBAAM7C,KACX8C,OAAM,SAACT,GAEJ,OADAD,QAAQC,MAAMA,GACP,QG7BRsC,CAAmBvB,EAAYpD,GACjC6C,MAAK,SAACsB,GAVW,IAAC7D,EAWX6D,GACAZ,GAZWjD,EAYS6D,EAZ6B,CAC7DxF,KAAMuE,EAAe0B,WACrB/F,QAASyB,QAaJwC,OAAM,SAACT,GACJD,QAAQC,MAAM,sBAAuBA,QAYpCwC,EAAwB,SACjCzB,EACA9C,EACAG,GAHiC,OAIiB,SAAC8C,GACnD,OHvBG,SAAP,sCGuBWuB,CAAsB1B,EAAY9C,EAAQG,GAC5CoC,MAAK,WACFU,EAfqB,SAACjD,EAAgBG,GAAjB,MAAiE,CAC9F9B,KAAMuE,EAAe6B,kBACrBlG,QAAS,CACLyB,SACAG,YAWauE,CAAkB1E,EAAQG,OAEtCqC,OAAM,SAACT,GACJD,QAAQC,MAAM,yBAA0BA,Q,wEEjHvC4C,EAAmB,WAC5B,OACI,yBAAKC,UAAW,6BACZ,kBAACC,EAAA,EAAD,QCYCC,EAAwD,SAAC,GAG/D,IAFHC,EAEE,EAFFA,eACAC,EACE,EADFA,QAEIC,GAAU,EADZ,EAEsDC,oBAAkB,GAFxE,mBAEKC,EAFL,KAE2BC,EAF3B,OAGwBF,mBAAiB,IAHzC,mBAGKtD,EAHL,KAGYyD,EAHZ,OAIkCH,mBAAiB,IAJnD,mBAIKI,EAJL,KAIiBC,EAJjB,KAuCF,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,0BACA,kBAACC,EAAA,EAAD,KACKP,GAAwB,kBAAC,EAAD,MACzB,kBAACQ,EAAA,EAAD,uDAGA,yBAAKf,UAAU,0BACX,0BAAMgB,SAjCQ,SAC1BC,GAEAA,EAAMC,iBACNV,GAAwB,GACxBnE,EAAK8E,uBAAuBnE,GACvBW,MAAK,WACF6C,GAAwB,GACxBL,EAAef,EAAUgC,qBAE5BxD,OAAM,SAACT,GACJqD,GAAwB,GACpBrD,GAASkD,GACTM,EAAcxD,EAAMkE,SAExBnE,QAAQC,MAAMA,QAmBN,kBAACmE,EAAA,EAAD,CACIC,MAAOvE,EACPwE,OAAO,QACP1G,GAAG,QACH2G,MAAM,gBACNhI,KAAK,QACLiI,WAAS,EACTvE,MAAsB,KAAfuD,EACPiB,WAA2B,KAAfjB,GAAqBA,EACjCkB,SApDA,SAACX,GAAsE,IACnFM,EAAUN,EAAMY,cAAhBN,MACHlB,IAGLM,EAAc,IACdF,EAASc,OAgDO,kBAACO,EAAA,EAAD,CACIC,QAAS,CAAEC,KAAM,4BACjBvI,KAAK,SACLwI,MAAM,UACNC,SAAoB,KAAVlF,GAA+B,KAAf0D,EAC1ByB,QAAQ,aALZ,sBAWR,yBAAKnC,UAAU,iCACX,kBAACe,EAAA,EAAD,8BAC2B,IACvB,4BACIf,UAAU,kCACVoC,QAAS,kBAAMjC,EAAef,EAAUiD,UAF5C,WAMC,MACD,4BACIrC,UAAU,kCACVoC,QAAS,kBAAMjC,EAAef,EAAUkD,UAF5C,cASZ,kBAACC,EAAA,EAAD,KACI,kBAACT,EAAA,EAAD,CAAQM,QAzDA,WAChB/B,GAAU,EACVD,KAuDsC6B,MAAM,WAApC,aCvGHO,EAA4D,SAAC,GAAiC,IAA/BrC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,QACxF,OACI,kBAAC,IAAMQ,SAAP,KACI,kBAACC,EAAA,EAAD,wBACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,qEAGA,yBAAKf,UAAU,iCACX,kBAACe,EAAA,EAAD,KACI,4BACIf,UAAU,kCACVoC,QAAS,kBAAMjC,EAAef,EAAUiD,UAF5C,WAMC,MACD,4BACIrC,UAAU,kCACVoC,QAAS,kBAAMjC,EAAef,EAAUkD,UAF5C,cASZ,kBAACC,EAAA,EAAD,KACI,kBAACT,EAAA,EAAD,CAAQM,QAAShC,EAAS6B,MAAM,WAAhC,YClBHQ,EAAwC,SAAC,GAAiC,IAA/BtC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,QAChEC,GAAU,EADoE,EAE1BC,oBAAkB,GAFQ,mBAE3EC,EAF2E,KAErDC,EAFqD,OAGxDF,mBAAiB,IAHuC,mBAG3EtD,EAH2E,KAGpEyD,EAHoE,OAIlDH,mBAAiB,IAJiC,mBAI3EoC,EAJ2E,KAIjEC,EAJiE,OAK5CrC,mBAAiB,IAL2B,mBAK3EsC,EAL2E,KAK9DC,EAL8D,KAO5EC,EAAkB,SAAC7B,GAErB,GADAA,EAAMC,iBACDb,EAAL,CAF0F,MAKpEY,EAAMY,cAApB/G,EALkF,EAKlFA,GAAIyG,EAL8E,EAK9EA,MACD,UAAPzG,GACA2F,EAASc,GAEF,aAAPzG,GACA6H,EAAYpB,GAEI,KAAhBqB,GACAC,EAAe,MAIjBE,EAAY,uCAAG,WACjB9B,GADiB,SAAAvE,EAAA,sDAGjBuE,EAAMC,iBACNV,GAAwB,GACpBH,GACAhE,EAAK2G,2BAA2BhG,EAAO0F,GAClC/E,MAAK,WACF6C,GAAwB,GACxBJ,OAEHxC,OAAM,SAACT,GACJwF,EAAY,IACZnC,GAAwB,GACxBqC,EAAe1F,EAAMkE,YAdhB,2CAAH,sDAwBZ4B,EAAgBC,mBAAQ,WAC1B,MAAoB,KAAbR,GAA6B,KAAV1F,IAC3B,CAACA,EAAO0F,IAEX,OACI,kBAAC,IAAM9B,SAAP,KACI,kBAACC,EAAA,EAAD,CAAa/F,GAAG,qBAAhB,WACA,kBAACgG,EAAA,EAAD,KACKP,GAAwB,kBAAC,EAAD,MACzB,kBAACQ,EAAA,EAAD,4BACA,0BAAMC,SAAU+B,EAAc/C,UAAU,0BACpC,kBAACsB,EAAA,EAAD,CACIC,MAAOvE,EACPwE,OAAO,QACP1G,GAAG,QACH2G,MAAM,gBACNhI,KAAK,QACLiI,WAAS,EACTC,WAA4B,KAAhBiB,GAAsBA,EAClCzF,MAAuB,KAAhByF,EACPhB,SAAUkB,IAEd,kBAACxB,EAAA,EAAD,CACIC,MAAOmB,EACPlB,OAAO,QACP1G,GAAG,WACH2G,MAAM,WACNhI,KAAK,WACLiI,WAAS,EACTE,SAAUkB,IAEd,kBAAChB,EAAA,EAAD,CACIC,QAAS,CAAEC,KAAM,4BACjBvI,KAAK,SACLwI,MAAM,UACNC,UAAWe,EACXd,QAAQ,aALZ,YAUJ,yBAAKnC,UAAU,iCACX,kBAACe,EAAA,EAAD,8BAC2B,IACvB,4BACIf,UAAU,kCACVoC,QAAS,kBAAMjC,EAAef,EAAUiD,UAF5C,WAMC,MACD,4BACIrC,UAAU,kCACVoC,QAAS,kBAAMjC,EAAef,EAAU+D,kBAF5C,wBASZ,kBAACZ,EAAA,EAAD,KACI,kBAACT,EAAA,EAAD,CAAQM,QAlEA,WAChB/B,GAAU,EACVD,KAgEsC6B,MAAM,WAApC,aC7GHmB,EAAwC,SAAC,GAAiC,IAA/BjD,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,QAChEC,GAAU,EADoE,EAE1BC,oBAAkB,GAFQ,mBAE3EC,EAF2E,KAErDC,EAFqD,OAG1DF,mBAAiB,IAHyC,mBAG3E+C,EAH2E,KAGrEC,EAHqE,OAIxDhD,mBAAiB,IAJuC,mBAI3EtD,EAJ2E,KAIpEyD,EAJoE,OAKlDH,mBAAiB,IALiC,mBAK3EoC,EAL2E,KAKjEC,EALiE,OAMlCrC,mBAAiB,IANiB,mBAM3EiD,EAN2E,KAMzDC,EANyD,OAO9ClD,mBAAiB,IAP6B,mBAO3EI,EAP2E,KAO/DC,EAP+D,OAQxCL,mBAAiB,IARuB,mBAQ3EmD,EAR2E,KAQ5DC,EAR4D,KAU5EZ,EAAkB,SAAC7B,GACrB,GAAKZ,EAAL,CAD0F,MAIpEY,EAAMY,cAApB/G,EAJkF,EAIlFA,GAAIyG,EAJ8E,EAI9EA,MACD,SAAPzG,GACAwI,EAAQ/B,GAED,UAAPzG,GACA2F,EAASc,GAEF,aAAPzG,GACA6H,EAAYpB,GAEL,oBAAPzG,GACA0I,EAAoBjC,KAItBoC,EAAY,uCAAG,WACjB1C,GADiB,iBAAAvE,EAAA,yDAGjBuE,EAAMC,iBACNV,GAAwB,IACpBH,EALa,0CAOchE,EAAKuH,+BAA+B5G,EAAO0F,GAPzD,gBAODlG,EAPC,EAODA,KACRgE,GAAwB,GACxBjE,EAA6BC,EAAM,CAAEqH,YAAaR,IAAQzF,OAAM,SAACT,GAC7DD,QAAQC,MAAM,uBAAwBA,MAVjC,kDAaTqD,GAAwB,GACpB,KAAMsD,KAAKC,SAAS,aAAe1D,GACnCqD,EAAiB,KAAMrC,SAEvB,KAAMyC,KAAKC,SAAS,UAAY1D,GAChCM,EAAc,KAAMU,SAExBnE,QAAQC,MAAM,yBAAd,MApBS,0DAAH,sDA8BZ6G,EAAmBd,mBAAQ,WAC7B,MAAiB,KAAbR,GAAwC,KAArBa,GACZb,IAAaa,IAGzB,CAACb,EAAUa,IAERN,EAAgBC,mBAAQ,WAC1B,MACiB,KAAbR,GACqB,KAArBa,GACU,KAAVvG,GACe,KAAf0D,GACkB,KAAlB+C,GACAO,IAEL,CAAChH,EAAO0F,EAAUa,EAAkB7C,EAAY+C,EAAeO,IAE5DC,EAAqBf,mBAAQ,WAC/B,MAAsB,KAAlBO,EACOA,EAEPf,IAAaa,GAAyC,KAArBA,EAC1B,+BADX,IAID,CAACb,EAAUa,EAAkBE,IAEhC,OACI,kBAAC,IAAM7C,SAAP,KACI,kBAACC,EAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,KACKP,GAAwB,kBAAC,EAAD,MACzB,kBAACQ,EAAA,EAAD,+BACA,0BAAMC,SAAU2C,EAAc3D,UAAU,0BACpC,kBAACsB,EAAA,EAAD,CACIC,MAAO8B,EACP7B,OAAO,QACP1G,GAAG,OACH2G,MAAM,0BACNhI,KAAK,OACLiI,WAAS,EACTE,SAAUkB,IAEd,kBAACxB,EAAA,EAAD,CACIC,MAAOvE,EACPwE,OAAO,QACP1G,GAAG,QACH2G,MAAM,gBACNhI,KAAK,QACLiI,WAAS,EACTC,WAA2B,KAAfjB,GAAqBA,EACjCvD,MAAsB,KAAfuD,EACPkB,SAAUkB,IAEd,kBAACxB,EAAA,EAAD,CACIC,MAAOmB,EACPlB,OAAO,QACP1G,GAAG,WACH2G,MAAM,WACNhI,KAAK,WACLiI,WAAS,EACTC,WAAYsC,EACZ9G,OAAQ6G,GAAsC,KAAlBP,EAC5B7B,SAAUkB,IAEd,kBAACxB,EAAA,EAAD,CACIC,MAAOgC,EACP/B,OAAO,QACP1G,GAAG,kBACH2G,MAAM,kBACNhI,KAAK,WACLiI,WAAS,EACTC,WAAYsC,EACZ9G,OAAQ6G,GAAsC,KAAlBP,EAC5B7B,SAAUkB,IAEd,kBAAChB,EAAA,EAAD,CACIC,QAAS,CAAEC,KAAM,4BACjBvI,KAAK,SACLwI,MAAM,UACNC,UAAWe,EACXd,QAAQ,aALZ,YAUJ,yBAAKnC,UAAU,iCACX,kBAACe,EAAA,EAAD,wBACqB,IACjB,4BACIf,UAAU,kCACVoC,QAAS,kBAAMjC,EAAef,EAAUkD,UAF5C,cASZ,kBAACC,EAAA,EAAD,KACI,kBAACT,EAAA,EAAD,CAAQM,QAzGA,WAChB/B,GAAU,EACVD,KAuGsC6B,MAAM,WAApC,c,SL1KJ7C,K,gBAAAA,E,gBAAAA,E,gCAAAA,E,qCAAAA,M,KAYL,IMnBK8E,GAUAC,GNSCC,GAAkD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQjE,EAAc,EAAdA,QAAc,EAClDE,mBAAoBlB,EAAUkD,QADoB,mBAC7EgC,EAD6E,KAClEC,EADkE,KAGpFC,qBAAU,WACDH,GACDE,EAAanF,EAAUkD,UAE5B,CAAC+B,IAsCJ,OACI,kBAACI,EAAA,EAAD,CACIC,sBAAoB,EACpBC,sBAAoB,EACpBC,KAAMP,EACNjE,QAASA,EACT2B,QAAS,CAAE8C,MAAO,8BA1CJ,WAClB,OAAQP,GACJ,KAAKlF,EAAUkD,OACX,OACQ,kBAAC,EAAD,CACAlC,QAASA,EACTD,eAAgBoE,IAI5B,KAAKnF,EAAUiD,OACX,OACQ,kBAAC,EAAD,CACAjC,QAASA,EACTD,eAAgBoE,IAI5B,KAAKnF,EAAU+D,eACX,OACQ,kBAAC,EAAD,CACA/C,QAASA,EACTD,eAAgBoE,IAI5B,KAAKnF,EAAUgC,iBACX,OACI,kBAAC,EAAD,CACIhB,QAASA,EACbD,eAAgBoE,KAcvBO,K,iDO3DAC,GAAgC,SAAC,GAAoD,IAAD,EAAjDC,EAAiD,EAAjDA,eAAgBC,EAAiC,EAAjCA,iBAAkBC,EAAe,EAAfA,SACxEC,EAAWC,aAAY,SAACC,GAAD,OAA0BA,EAAMF,YAC7D,OACI,kBAACG,GAAA,EAAD,CAAQC,SAAS,SAASxD,QAAS,CAAEC,KAAM,YACvC,kBAACwD,GAAA,EAAD,CAASzD,QAAS,CAAEC,KAAM,qBACtB,kBAACyD,GAAA,EAAD,CAAYC,KAAK,QAAQzD,MAAM,UAAUG,QAAS4C,GAC9C,kBAACW,GAAA,EAAD,OAEJ,kBAACC,GAAA,EAAD,CAAYzD,QAAQ,KAAKnC,UAAW,kBAC/BmF,GAAQ,2BAEDA,EAAStB,mBAFR,QAEuB,OAFvB,6CAKb,yBAAK7D,UAAU,sBACVmF,EACG,kBAACrD,EAAA,EAAD,CACIG,MAAM,UACNF,QAAS,CAAEC,KAAM,gCACjBI,QAAS+C,EAAWD,EAAW/K,GAHnC,WAQA,kBAAC2H,EAAA,EAAD,CACIG,MAAM,UACNF,QAAS,CAAEC,KAAM,gCACjBI,QAAU+C,EAA8BhL,EAAnB8K,GAHzB,c,oBCnCXY,GAA4D,SAACC,GACtE,OACI,uCAAK9F,UAAW,kBAAsB8F,GAClC,yBACIC,MAAM,6BACNC,OAAO,QACPC,QAAQ,gBACRC,MAAM,QACNlG,UAAU,IAEV,2BACI,0BACImG,EAAE,kiEACFC,gBAAc,UACdpG,UAAU,cACVqG,iBAAe,UACfC,KAAK,gBCVhBC,GAAoC,SAAC,GAA0B,IAAxBtB,EAAuB,EAAvBA,iBAChD,OACI,kBAACuB,GAAA,EAAD,CAAWzE,QAAS,CAAEC,KAAM,sBACxB,kBAACyE,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAG9E,QAAS,CAAEC,KAAM,6BACvC,kBAAC,GAAD,OAEJ,kBAACyE,GAAA,EAAD,CACIE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJ9E,QAAS,CAAEC,KAAM,4CAEjB,kBAACwE,GAAA,EAAD,KACI,kBAACZ,GAAA,EAAD,CAAYzD,QAAQ,YAAYJ,QAAS,CAAEC,KAAM,uBAAjD,eAGA,kBAAC4D,GAAA,EAAD,CACI7D,QAAS,CAAEC,KAAM,mBACjBG,QAAQ,KACR2E,UAAU,MAHd,8BAOA,kBAAClB,GAAA,EAAD,CAAY7D,QAAS,CAAEC,KAAM,kBAAoBG,QAAQ,SAAzD,wEAEI,6BAFJ,iGAKI,6BALJ,4EASJ,kBAACqE,GAAA,EAAD,CAAWzE,QAAS,CAAEC,KAAM,6BACxB,kBAACF,EAAA,EAAD,CAAQK,QAAQ,WAAWF,MAAM,UAAUG,QAAS6C,GAApD,mCCvCX8B,GAAQ,WACjB,OACI,yBAAK/G,UAAW,oBACZ,kBAAC4F,GAAA,EAAD,CAAYzD,QAAQ,KAAK6E,cAAY,GAArC,kBAGA,kBAACpB,GAAA,EAAD,CAAYzD,QAAQ,KAAK6E,cAAY,GAArC,gCAGA,kBAACpB,GAAA,EAAD,CAAYzD,QAAQ,QAAQ6E,cAAY,GAAxC,+DACgE,6BADhE,yGAGyB,6BAHzB,sFAMA,kBAACpB,GAAA,EAAD,CAAYzD,QAAQ,KAAK6E,cAAY,GAArC,0BAGA,kBAACpB,GAAA,EAAD,CAAYzD,QAAQ,QAAQ6E,cAAY,GAAxC,uEACwE,6BADxE,qDAIA,kBAACpB,GAAA,EAAD,CAAYzD,QAAQ,KAAK6E,cAAY,GAArC,mBAGA,kBAACpB,GAAA,EAAD,CAAYzD,QAAQ,QAAQ6E,cAAY,GAAxC,+O,mBJ5BA9C,K,kBAAAA,E,eAAAA,Q,cAUAC,K,oCAAAA,E,2CAAAA,Q,KAiBL,IKpBK8C,GLoBCC,GAAmB,SAACC,GAAD,MAAkD,CAC9E1N,KAAM0K,GAAoBiD,iBAC1BzN,QAASwN,I,+BMzBAE,GAAwB,WACjC,OACI,kBAACb,GAAA,EAAD,CAAWzE,QAAS,CAAEC,KAAM,yBACxB,kBAAC,GAAD,MACA,kBAAC4D,GAAA,EAAD,CAAYzD,QAAQ,aAApB,mDCACmF,GAAwC,SAAC,GAAmC,IAAjCtH,EAAgC,EAAhCA,UAAWuH,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACvE,OACI,yBAAKxH,UAAWA,GACZ,yBACI+F,MAAM,6BACN0B,EAAE,IACFC,EAAE,IACFC,iBAAiB,kBACjBC,QAAQ,MACR3B,QAAQ,cACR4B,SAAS,YAET,0BACIvB,KAAI,OAAEkB,QAAF,IAAEA,IAAU,UAChBrB,EAAE,6RAEN,0BACIG,KAAI,OAAEiB,QAAF,IAAEA,IAAU,UAChBpB,EAAE,yKC1Bf,SAAS2B,GAAUC,EAAKC,GAC3B,OAAOD,EAAMlO,KAAKoO,OAAOD,EAAMD,GAAOlO,KAAKC,W,SHMnCmN,K,oBAAAA,E,eAAAA,Q,KAcL,IAAMiB,GAAsD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACzC7H,oBAAkB,GADuB,mBAC9E8H,EAD8E,KAC9DC,EAD8D,OAErD/H,mBAAiB,GAFoC,mBAE9EgI,EAF8E,KAEpEC,EAFoE,OAG3DjI,mBAAiB,GAH0C,mBAG9EkI,EAH8E,KAGvEC,EAHuE,KAI/EC,EAAcC,iBAAwB,MACtCC,EAAYD,iBAAiC,MAS7CE,EAAQ,WACkB,OAAxBH,EAAYI,SAAoBV,IAChCM,EAAYI,QAAQC,gBACpBV,GAAkB,KAIpBW,EAAiB,SAACzH,EAAe0H,GACnC,OAAQA,GACJ,IAAK,WACDV,EAAYhH,GACZ,MACJ,IAAK,QACDkH,EAASlH,KAkCrB,OA7BAiD,qBAAU,YACN,OAAIoE,QAAJ,IAAIA,OAAJ,EAAIA,EAAWE,WACXJ,EAAYI,QAAU,IAAII,KAAS,CAC/BC,SAAUP,EAAUE,QAAQhO,GAC5BsO,YAAa,IACbC,aAAc,GACdC,cAAe,SACfC,YAAapB,EAAaqB,OAC1BC,SAAUtB,EACVuB,UAAW,CACPjQ,KAAM,aACNkQ,OAAQ,iBACRrB,SAAUR,GAAUQ,EAAU,IAC9BE,MAAOV,GAAUU,EAAO,KAE5BoB,KAAM,CACFC,OAAQ1B,EAAaqB,OACrBM,UAAW,SACXV,YAAa,QAI1B,CAACjB,EAAcO,EAAaE,EAAWR,EAAgBE,EAAUE,IAEpEhE,qBAAU,WACNqE,MAED,CAACV,IAGA,yBAAKnI,UAAW,kBACXmI,EAAaqB,QAAU,GAAKrB,EAAaqB,OAAS,GAC/C,kBAAC,IAAM5I,SAAP,KACI,yBAAKZ,UAAW,uBACZ,kBAAC,GAAD,CACIA,UAAW,eACXuH,OAAQ,UACRC,OAAQ,YAEZ,4BAAQzI,IAAK6J,EAAW9N,GAAI,aAAcoL,MAAM,MAAMF,OAAO,SAEjE,yBAAKhG,UAAW,yBACZ,kBAAC4F,GAAA,EAAD,CAAYoB,cAAY,GAAxB,YACA,kBAAC+C,GAAA,EAAD,CACIxI,MAAO+G,EACP0B,kBAAkB,OAClBjC,IAAK,EACLC,IAAK,GACLpG,SAAU,SAACqI,EAAyB1I,GAA1B,OACNyH,EAAezH,EAAiB0F,GAAYiD,aAGpD,kBAACtE,GAAA,EAAD,CAAYoB,cAAY,GAAxB,SACA,kBAAC+C,GAAA,EAAD,CACIxI,MAAOiH,EACPwB,kBAAkB,OAClBjC,IAAK,EACLC,IAAK,GACLpG,SAAU,SAACqI,EAAyB1I,GAA1B,OACNyH,EAAezH,EAAiB0F,GAAYkD,UAGpD,kBAACrI,EAAA,EAAD,CACIC,QAAS,CAAEC,KAAM,wBACjBC,MAAM,UACNE,QAAQ,YACRD,SAAUkG,EACVhG,QA5FX,WACmB,OAAxBsG,EAAYI,SAAqBV,IACjCM,EAAYI,QAAQsB,iBACpB/B,GAAkB,MAoFN,kBASA,kBAACvG,EAAA,EAAD,CACIC,QAAS,CAAEC,KAAM,wBACjBC,MAAM,UACNE,QAAQ,YACRD,UAAWkG,EACXhG,QAASyG,GALb,WAYR,kBAAC,GAAD,QItIVwB,GAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGEC,GAAiB,WACnB,IAAMC,EAAcF,GAAOb,OACrBgB,EAAoB3Q,KAAKoO,MAAMpO,KAAKC,UAAYyQ,EAAc,EAAI,IACxE,OAAOF,GAAOG,IAaLC,GAA0B,SAACtC,GAAD,OAVjBuC,EAWLvC,EAVNuC,EAAMnQ,QAAO,SAACoQ,EAAKC,EAAOC,GAC7B,IAAMC,EAAIjR,KAAKoO,MAAMpO,KAAKC,SAAW+Q,GAC/BE,EAAOJ,EAAIE,GAGjB,OAFAF,EAAIE,GAAKF,EAAIG,GACbH,EAAIG,GAAKC,EACFL,IACRA,IAIwBM,KAAI,SAACC,GAAD,MAAkB,CAC7CC,KAAMD,EACNnB,UAAWQ,SAbE,IAACI,GClETS,GAAoB,WAAO,IAAD,EACkB/F,aACjD,SAACC,GAAD,OAA0BA,KAExB8C,ECRkB,SAAC5M,EAAkBP,EAAcoQ,GAAjC,OACxBlI,mBAAQ,WACJ,OAAQkI,EAAcC,eAClB,KAAKnH,GAAcoH,QACf,OAAOF,EAAcjE,UAAU6D,KAC3B,SAACvP,GAAD,gBAAiBF,EAAQE,GAAU0C,UAAnC,YAAgD5C,EAAQE,GAAU2C,aAG1E,KAAK8F,GAAcqH,MAaf,OAZ6B3Q,OAAOM,QAAQF,GAAOT,QAC/C,SAACiR,EAAD,GAA0D,IAAD,mBAAtCpQ,EAAsC,KAAnBqQ,EAAmB,KAA5BlQ,QACzB,GAAI6P,EAAcjE,UAAUpD,SAAS3I,GAAS,CAC1C,IAAMsQ,EAAeD,EAAYjQ,QAC7B,SAAC8C,GAAD,OAAakN,EAAgBzH,SAASzF,MAE1C,MAAM,GAAN,oBAAWkN,GAAX,aAA+BE,IAEnC,OAAOF,IAEX,IAEwBR,KACxB,SAACvP,GAAD,gBAAiBF,EAAQE,GAAU0C,UAAnC,YAAgD5C,EAAQE,GAAU2C,gBAI/E,CAAC7C,EAASP,EAAOoQ,IDlBCO,CAJc,EAC3BpQ,QAD2B,EAClBP,MADkB,EACXmM,WAKlByE,EAAmB1I,mBAAQ,kBAAMuH,GAAwBtC,KAAe,CAACA,IAE/E,OACI,kBAAC3B,GAAA,EAAD,CAAWzE,QAAS,CAAEC,KAAM,wBACxB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAmBmG,aAAcyD,M,oBEZhCC,GAA0D,SAAC,GAGjE,IAFH5G,EAEE,EAFFA,iBACA6G,EACE,EADFA,YAEA,OACI,kBAAC,IAAMlL,SAAP,KACI,kBAAC4F,GAAA,EAAD,CACIzE,QAAS,CACLC,KAAM,yEAGT8J,GAEL,kBAACtF,GAAA,EAAD,CAAWzE,QAAS,CAAEC,KAAM,8BACxB,kBAAC4D,GAAA,EAAD,CAAYzD,QAAQ,KAAKJ,QAAS,CAAEC,KAAM,yBAA2BgF,cAAY,GAAjF,0BAGA,kBAACpB,GAAA,EAAD,CACIzD,QAAQ,YACRJ,QAAS,CAAEC,KAAM,4BACjBgF,cAAY,GAHhB,8BAOA,kBAAClF,EAAA,EAAD,CACIG,MAAM,UACNF,QAAS,CAAEC,KAAM,mBACjBI,QAAS6C,GAHb,c,kDCxBH8G,GAAa,YAAyD,IAAlDC,EAAiD,EAAjDA,SAC7B,OAD8E,EAAvCC,QAAuC,EAAhC1K,MACrB,yBAAKvB,UAAW,uBAAwBgM,GAAkB,M,8BCC1EE,GAAsD,SAAC,GAK7D,IAJHC,EAIE,EAJFA,eACAC,EAGE,EAHFA,yBACAJ,EAEE,EAFFA,SACAK,EACE,EADFA,YACE,EACkC/L,oBAAkB,GADpD,mBACKgM,EADL,KACiBC,EADjB,KAGIC,EAAc,WAChBD,GAAc,GACVF,GACAA,KAIR,OACI,kBAAC7F,GAAA,EAAD,CAAWzE,QAAS,CAAEC,KAAM,2BACvBgK,EACD,kBAACxF,GAAA,EAAD,CAAWzE,QAAS,CAAEC,KAAM,uBACxB,kBAACF,EAAA,EAAD,CACIM,QAAS,kBAAMmK,GAAc,IAC7BxK,QAAS,CAAEC,KAAM,6BACjByK,UAAW,kBAACC,GAAA,EAAD,MACXvK,QAAQ,YACRF,MAAM,UACNC,SAAUoK,GAETH,GAEL,kBAAC1H,EAAA,EAAD,CACIG,KAAM0H,EACNlM,QAASoM,EACTzK,QAAS,CAAE8C,MAAO,uBAEjBuH,EAAyBI,O,4DC1BjCG,GAAuD,SAAC,GAK9D,IAJHC,EAIE,EAJFA,gBACAC,EAGE,EAHFA,SACApL,EAEE,EAFFA,MACAqL,EACE,EADFA,eAEA,OACI,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAAC5K,QAAS,kBAAMwK,GAAiBC,KAC7C,kBAACI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIxH,KAAK,QACLzD,MAAM,UACNkL,QAASN,EACTO,UAAW,EACXC,eAAa,KAGrB,kBAACC,GAAA,EAAD,CAAcvL,QAAS,CAAEC,KAAM,sBAAwBuL,QAAS9L,IAChE,kBAAC+L,GAAA,EAAD,KACI,kBAAC/H,GAAA,EAAD,CAAYC,KAAK,MAAMtD,QAAS0K,GAC5B,kBAACW,GAAA,EAAD,CAAQxL,MAAM,eCpBrByL,GAA8B,WAAO,IAAD,EACXpN,mBAAiB,IADN,mBACtCnC,EADsC,KAC3BwP,EAD2B,OAEbrN,mBAAiB,IAFJ,mBAEtClC,EAFsC,KAE5BwP,EAF4B,OAGJxI,aAAY,SAACC,GAAD,OAA0BA,KAAvE9J,EAHqC,EAGrCA,QAAS4J,EAH4B,EAG5BA,SAAUgC,EAHkB,EAGlBA,UACrB9I,EAAWwP,cAQXC,EAAgB,SAACtB,GACfrH,GAA0B,KAAdhH,GAAiC,KAAbC,GAChCC,EAASJ,EAAckH,EAAUhH,EAAWC,IAEhDoO,KAeE1J,EAAkB,SAAC7B,GAAsE,IAAD,EACpEA,EAAMY,cAApB/G,EADkF,EAClFA,GAAIyG,EAD8E,EAC9EA,MACD,cAAPzG,GACA6S,EAAapM,GAEN,aAAPzG,GACA8S,EAAYrM,IAiDpB,OACI,kBAAC,GAAD,CACI4K,eAAe,iBACfE,YAtEgB,WACpBsB,EAAa,IACbC,EAAY,KAqERxB,yBAjDuB,SAACI,GAC5B,OACI,kBAAC,IAAM5L,SAAP,KACI,kBAACC,EAAA,EAAD,mBACA,0BAAMG,SAAU,kBAAM8M,EAActB,KAChC,kBAAC1L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,qDAGA,kBAACO,EAAA,EAAD,CACIyM,WAAS,EACTnM,SAAUkB,EACVtB,OAAO,QACP1G,GAAG,YACH2G,MAAM,aACNhI,KAAK,OACLiI,WAAS,IAEb,kBAACJ,EAAA,EAAD,CACIM,SAAUkB,EACVtB,OAAO,QACP1G,GAAG,WACH2G,MAAM,YACNhI,KAAK,OACLiI,WAAS,KAGjB,kBAACa,EAAA,EAAD,KACI,kBAACT,EAAA,EAAD,CAAQM,QAASoK,EAAavK,MAAM,WAApC,UAGA,kBAACH,EAAA,EAAD,CACIrI,KAAK,SACL2I,QAAS,kBAAM0L,EAActB,IAC7BvK,MAAM,UACNC,SAAwB,KAAd/D,GAAiC,KAAbC,GAJlC,uBAoBZ,kBAAC4P,GAAA,EAAD,CAAelH,UAAU,OAAzB,WACA,kBAACmH,GAAA,EAAD,CAAMlM,QAAS,CAAEC,KAAM,wBAA0B8E,UAAU,OACtDlM,OAAOsT,OAAO3S,GAASyP,KAAI,SAAC1M,EAAQ6P,GAAT,OACxB,kBAAC,GAAD,CACIzQ,IAAKyQ,EACL1M,MAAK,UAAKnD,EAAOH,UAAZ,YAAyBG,EAAOF,UACrCyO,SAAU1F,EAAUA,UAAUpD,SAASzF,EAAOxD,IAC9C8R,gBAAiB,SAACO,GAAD,OA3EZ,SAACrS,EAAYqS,GAClC,IAAMiB,EAAejB,EAAO,uBAClBhG,EAAUA,WADQ,CACGrM,IACzBqM,EAAUA,UAAU3L,QAAO,SAAC8C,GAAD,OAAYA,IAAWxD,KACxDuD,EAAS6I,GAAiBkH,IAuE6BC,CAAiB/P,EAAOxD,GAAIqS,IACnEL,eAAgB,kBA9FVhS,EA8FiCwD,EAAOxD,QA7F1DqK,GACA9G,EAASI,EAAmB0G,EAAUrK,KAFrB,IAACA,W,gFCUjBwT,GAA0D,SAAC,GAKjE,IAJHjT,EAIE,EAJFA,KACAwR,EAGE,EAHFA,SACA0B,EAEE,EAFFA,gBACA3B,EACE,EADFA,gBACE,EACkCtM,oBAAkB,GADpD,mBACKkO,EADL,KACiBC,EADjB,OAE8CnO,oBAAkB,GAFhE,mBAEKoO,EAFL,KAEuBC,EAFvB,OAG8BC,IAAMtO,SAA6B,MAHjE,mBAGKuO,EAHL,KAGeC,EAHf,OAI4B1J,aAAY,SAACC,GAAD,OAA0BA,KAA5DF,EAJN,EAIMA,SAAU5J,EAJhB,EAIgBA,QACZ8C,EAAWwP,cAMXrB,EAAc,WAChBmC,GAAoB,GACpBG,EAAY,OAehB,OACI,kBAAC,IAAMlO,SAAP,KACI,kBAACmM,GAAA,EAAD,CAAUC,QAAM,EAAC5K,QAAS,kBAAMwK,GAAiBC,KAC7C,kBAACI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIxH,KAAK,QACLzD,MAAM,UACNkL,QAASN,EACTO,UAAW,EACXC,eAAa,KAGrB,kBAACC,GAAA,EAAD,CACIvL,QAAS,CAAEC,KAAM,sBACjBuL,QAASlS,EAAKiE,SACdyP,UAAkD,IAAvCnU,OAAOsT,OAAO7S,EAAKE,SAASiO,QAAgB,eAE1D5O,OAAOsT,OAAO7S,EAAKE,SAASiO,OAAS,GAClC,kBAAC/D,GAAA,EAAD,CACIC,KAAK,MACLtD,QAzBK,SAAC4M,GACtBA,EAAEC,kBACFR,GAAeD,IAwBCzM,QAAS,CAAEC,KAAM,8BAEhBwM,EAAa,kBAACU,GAAA,EAAD,CAAYjN,MAAM,WAAc,kBAACkN,GAAA,EAAD,CAAYlN,MAAM,YAGxE,kBAACuL,GAAA,EAAD,KACI,kBAAC/H,GAAA,EAAD,CAAYrD,QAhDR,SAACnB,GACjB6N,EAAY7N,EAAMY,iBAgDF,kBAACuN,GAAA,EAAD,OAEJ,kBAAC,KAAD,CAAMP,SAAUA,EAAUQ,aAAW,EAACzK,OAAQiK,EAAUzO,QAASoM,GAC7D,kBAAC8C,GAAA,EAAD,CACIlN,QAAS,WACLmM,EAAgBlT,EAAKP,IACrB0R,MAGJ,kBAACS,GAAA,EAAD,KACI,kBAACsC,GAAA,EAAD,CAAUC,SAAS,WAEvB,kBAAC5J,GAAA,EAAD,CAAYzD,QAAQ,WAApB,mBAEJ,kBAACmN,GAAA,EAAD,CACIlN,QACIsM,EAxDH,WACjBvJ,IACAqH,IACAnO,EAASmB,EAAiB2F,EAAU9J,EAAKP,OAuDf,kBAAM6T,GAAoB,KAGpC,kBAAC1B,GAAA,EAAD,KACKyB,EACG,kBAACe,GAAA,EAAD,CAASD,SAAS,UAElB,kBAAC/B,GAAA,EAAD,CAAQ+B,SAAS,WAGzB,kBAAC5J,GAAA,EAAD,CAAYzD,QAAQ,WACfuM,EAAmB,gBAAkB,mBAMzD9T,OAAOsT,OAAO7S,EAAKE,SAASiO,OAAS,GAClC,kBAACkG,GAAA,EAAD,CAAUC,GAAInB,EAAYoB,QAAQ,OAAOC,eAAa,GAClD,kBAAC5B,GAAA,EAAD,CAAMnH,UAAU,MAAMgJ,gBAAc,EAACC,OAAK,GACrCnV,OAAOsT,OAAO7S,EAAKE,SAASyP,KAAI,SAACvP,GAC9B,IAAMuU,EAAW,UAAMzU,EAAQE,GAAU0C,UAAxB,YAAqC5C,EAAQE,GAAU2C,UACxE,OACI,kBAAC2O,GAAA,EAAD,CAAUrP,IAAKjC,EAAUuR,QAAM,EAACK,eAAa,GACzC,kBAACJ,GAAA,EAAD,KACI,kBAACgD,GAAA,EAAD,OAEJ,kBAAC3C,GAAA,EAAD,CAAcC,QAASyC,Y,kDC5IpD,SAASE,GAAIxT,EAAayT,GAC7B,OAAOzT,EAAElB,QAAO,SAAC+F,GAAD,OAAiC,IAAtB4O,EAAEC,QAAQ7O,MAGlC,SAAS8O,GAAa3T,EAAayT,GACtC,OAAOzT,EAAElB,QAAO,SAAC+F,GAAD,OAAiC,IAAtB4O,EAAEC,QAAQ7O,MCuBlC,IAAM+O,GAA0D,SAAC,GAGjE,IAFHC,EAEE,EAFFA,WACAnQ,EACE,EADFA,QACE,EACmCgF,aAAY,SAACC,GAAD,OAA0BA,KAAnErK,EADN,EACMA,MAAOmK,EADb,EACaA,SAAU5J,EADvB,EACuBA,QADvB,EAE4BqT,IAAMtO,SAAmB,IAFrD,mBAEK6M,EAFL,KAEcqD,EAFd,KAIIC,EAAoBvN,mBAAQ,kBAAMlI,EAAMuV,GAAYhV,UAAS,CAACgV,EAAYvV,IAC1E0V,EAAaxN,mBAAQ,kBAAMtI,OAAO+V,KAAKpV,KAAU,CAACA,IAClDqV,EAAmB1N,mBACrB,kBAAMwN,EAAWlV,QAAO,SAAC8C,GAAD,OAAamS,EAAkB1M,SAASzF,QAChE,CAACoS,EAAYD,IAGXpS,EAAWwP,cAEXgD,EAA0BR,GAAalD,EAASyD,GAChDE,EAA2BT,GAAalD,EAASsD,GAajDM,EAAkB,SAACC,GAAD,OAAqBX,GAAalD,EAAS6D,GAAOxH,QAEpEyH,EAAkB,SAACD,GAAD,OAAqB,WDpD1C,IAAetU,EAAayT,ECqDvBY,EAAgBC,KAAWA,EAAMxH,OACjCgH,EAAWN,GAAI/C,EAAS6D,IAExBR,GDxDU9T,ECwDOyQ,EDxDMgD,ECwDGa,EDvD5B,GAAN,oBAAWtU,GAAX,aAAiBwT,GAAIC,EAAGzT,SC6ElBwU,EAAa,SAACC,EAAwBH,GAAzB,OACf,kBAACI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIC,OACI,kBAACpE,GAAA,EAAD,CACI9K,QAAS6O,EAAgBD,GACzB/O,MAAM,UACNkL,QAAS4D,EAAgBC,KAAWA,EAAMxH,QAA2B,IAAjBwH,EAAMxH,OAC1D+H,cACIR,EAAgBC,KAAWA,EAAMxH,QAAqC,IAA3BuH,EAAgBC,GAE/D9O,SAA2B,IAAjB8O,EAAMxH,OAChBgI,WAAY,CAAE,aAAc,wBAGpCL,MAAOA,EACPM,UAAS,UAAKV,EAAgBC,GAArB,YAA+BA,EAAMxH,OAArC,eAEb,kBAACkI,GAAA,EAAD,MACA,kBAACzD,GAAA,EAAD,CAAM8B,OAAK,EAACjJ,UAAU,MAAM6K,KAAK,OAAO5P,QAAS,CAAEC,KAAM,6BACpDgP,EAAMhG,KAAI,SAACvP,GACR,IA5DM8F,EA4DAyO,EAAW,UAAMzU,EAAQE,GAAU0C,UAAxB,YAAqC5C,EAAQE,GAAU2C,UACxE,OACI,kBAAC2O,GAAA,EAAD,CACIrP,IAAKjC,EACLkW,KAAK,WACL3E,QAAM,EACN5K,SAlEFb,EAkEwB9F,EAlEN,WACpC,IAAMmW,EAAezE,EAAQiD,QAAQ7O,GAC/BsQ,EAAU,aAAO1E,IACD,IAAlByE,EACAC,EAAWC,KAAKvQ,GAEhBsQ,EAAWE,OAAOH,EAAc,GAEpCpB,EAAWqB,MA4DS,kBAAC5E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIC,SAAwC,IAA/BA,EAAQiD,QAAQ3U,GACzBwG,MAAM,UACNmL,UAAW,EACXC,eAAa,EACbmE,WAAY,CAAE,kBAAmB/V,MAGzC,kBAAC6R,GAAA,EAAD,CAAcxS,GAAIW,EAAU8R,QAASyC,QAIjD,kBAACjD,GAAA,EAAD,SAKZ,OACI,kBAAC,IAAMnM,SAAP,KACI,kBAACC,EAAA,EAAD,4BACA,kBAACC,EAAA,EAAD,KACI,kBAAC2F,GAAA,EAAD,CACIC,WAAS,EACTsL,QAAS,EACTC,QAAQ,SACRC,WAAW,SACXnQ,QAAS,CAAEC,KAAM,6BAEjB,kBAACyE,GAAA,EAAD,CAAME,MAAI,GAAEuK,EAAW,oBAAqBN,IAC5C,kBAACnK,GAAA,EAAD,CAAME,MAAI,GACN,kBAACF,GAAA,EAAD,CAAMC,WAAS,EAACyL,UAAU,SAASD,WAAW,UAC1C,kBAACzM,GAAA,EAAD,CACIC,KAAK,MACL0M,KAAK,QACLhQ,QAlFH,WACrB,IAAMiQ,EAAU,uBAAO5B,GAAP,aAA6BI,IACzC1L,GACA9G,EAASsB,EAAsBwF,EAAUoL,EAAY8B,IAEzD7B,EAAW,KA8EatO,SAA6C,IAAnC2O,EAAwBrH,QAElC,kBAAC8I,GAAA,EAAD,OAEJ,kBAAC7M,GAAA,EAAD,CACIC,KAAK,MACL0M,KAAK,QACLhQ,QAlFA,WACxB,IAAMiQ,EAAa5B,EAAkBjV,QACjC,SAAC8C,GAAD,OAAawS,EAAyB/M,SAASzF,MAE/C6G,GACA9G,EAASsB,EAAsBwF,EAAUoL,EAAY8B,IAEzD7B,EAAW,KA4EatO,SAA8C,IAApC4O,EAAyBtH,QAEnC,kBAAC+I,GAAA,EAAD,SAIZ,kBAAC9L,GAAA,EAAD,CAAME,MAAI,GAAEuK,EAAW,eAAgBT,MAG/C,kBAAClO,EAAA,EAAD,KACI,kBAACT,EAAA,EAAD,CAAQM,QAAShC,EAAS6B,MAAM,WAAhC,YCrJHuQ,GAA4B,WAAO,IAAD,EACXlS,mBAAiB,IADN,mBACpChB,EADoC,KAC1BmT,EAD0B,OAEPnS,mBAAwB,MAFjB,mBAEpCiQ,EAFoC,KAExBmC,EAFwB,OAGJtN,aAAY,SAACC,GAAD,OAA0BA,KAArErK,EAHmC,EAGnCA,MAAOmK,EAH4B,EAG5BA,SAAUgC,EAHkB,EAGlBA,UACnB9I,EAAWwP,cAEX8E,EAAgB,SAACnG,GACfrH,GAAyB,KAAb7F,GACZjB,EAASgB,EAAY8F,EAAU7F,IAEnCkN,KAkDJ,OACI,kBAAC,GAAD,CACIL,eAAe,eACfE,YAlDgB,WACpBoG,EAAY,KAkDRrG,yBAxCuB,SAACI,GAC5B,OACI,kBAAC,IAAM5L,SAAP,KACI,kBAACC,EAAA,EAAD,iBACA,0BAAMG,SAAU,kBAAM2R,EAAcnG,KAChC,kBAAC1L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,iDAGA,kBAACO,EAAA,EAAD,CACIyM,WAAS,EACTnM,SAAU,SAACX,GAAD,OAAWwR,EAAYxR,EAAM2R,OAAOrR,QAC9CC,OAAO,QACPC,MAAM,YACNhI,KAAK,OACLiI,WAAS,KAGjB,kBAACa,EAAA,EAAD,KACI,kBAACT,EAAA,EAAD,CAAQM,QAASoK,EAAavK,MAAM,WAApC,UAGA,kBAACH,EAAA,EAAD,CACIM,QAAS,kBAAMuQ,EAAcnG,IAC7B/S,KAAK,SACLwI,MAAM,UACNC,SAAuB,KAAb5C,GAJd,qBAoBZ,kBAAC0O,GAAA,EAAD,CAAelH,UAAU,OAAzB,SACA,kBAACmH,GAAA,EAAD,CAAMlM,QAAS,CAAEC,KAAM,wBAA0B8E,UAAU,OACtDlM,OAAOsT,OAAOlT,GAAOgQ,KAAI,SAAC3P,EAAMwX,GAAP,OACtB,kBAAC,GAAD,CACItE,gBAAiBmE,EACjBhV,IAAKmV,EACLxX,KAAMA,EACNwR,SAAU1F,EAAUA,UAAUpD,SAAS1I,EAAKP,IAC5C8R,gBAAiB,SAACO,GAAD,OAzDZ,SAACrS,EAAYqS,GAClC,IAAMiB,EAAejB,EAAO,uBAClBhG,EAAUA,WADQ,CACGrM,IACzBqM,EAAUA,UAAU3L,QAAO,SAAC8C,GAAD,OAAYA,IAAWxD,KACxDuD,EAAS6I,GAAiBkH,IAqD6B0E,CAAiBzX,EAAKP,GAAIqS,UAK7E,kBAAC1I,EAAA,EAAD,CACIG,OAAQ2L,EACRnQ,QAAS,kBAAMsS,EAAc,OAC7B3Q,QAAS,CAAE8C,MAAO,uBAEjB0L,GACG,kBAAC,GAAD,CACIA,WAAYA,EACZnQ,QAAS,kBAAMsS,EAAc,YC7FxCK,GAAsD,SAAC,GAAqB,IAAnBjH,EAAkB,EAAlBA,YAC5DT,EAAgBjG,aAAY,SAACC,GAAD,OAA0BA,EAAM8B,UAAUkE,iBACtEhN,EAAWwP,cAMjB,OACI,kBAAC,IAAMjN,SAAP,KACI,yBAAKZ,UAAW,yBACZ,kBAACgT,GAAA,EAAD,CAAOC,QAAM,EAAClR,QAAS,CAAEC,KAAM,gBAC3B,kBAACkR,GAAA,EAAD,CACIC,eAAe,UACfC,UAAU,UACV7R,MAAO8J,EACPzJ,SAZC,SAACyR,EAA2BC,GrBalB,IAAC7Z,EqBZ5B4E,GrBY4B5E,EqBZC6Z,ErBY+C,CAChF7Z,KAAM0K,GAAoBoP,oBAC1B5Z,QAASF,MqBFWsI,QAAS,CAAEC,KAAM,iBAEjB,kBAACwR,GAAA,EAAD,CAAK/R,MAAO,kBAACgS,GAAA,EAAD,MAAWlS,MAAO2C,GAAcqH,QAC5C,kBAACiI,GAAA,EAAD,CAAK/R,MAAO,kBAACwO,GAAA,EAAD,MAAY1O,MAAO2C,GAAcoH,WAEjD,yBAAKtL,UAAW,gCAAiC8L,KAGzD,kBAAC,GAAD,CAA2BvK,MAAO8J,EAAeY,MAAO/H,GAAcqH,OAClE,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAA2BhK,MAAO8J,EAAeY,MAAO/H,GAAcoH,SAClE,kBAAC,GAAD,SC5BHoI,GAA0C,SAAC,GAKjD,IAJHC,EAIE,EAJFA,OACAtP,EAGE,EAHFA,OACAjE,EAEE,EAFFA,QACA6E,EACE,EADFA,iBAEME,EAAWC,aAAY,SAACC,GAAD,OAA0BA,EAAMF,YAEvDyO,EAAoB1Q,mBACtB,kBACI,kBAACuC,GAAA,EAAD,CACIC,KAAK,QACLzD,MAAM,UACNG,QAAShC,EACT2B,QAAS,CAAEC,KAAM,yBAEjB,kBAAC6R,GAAA,EAAD,SAGR,CAACzT,IAGL,OACI,kBAAC0T,GAAA,EAAD,CAAQH,OAAQA,EAAQ/O,KAAMP,EAAQjE,QAASA,EAAS2B,QAAS,CAAEC,KAAM,WACrE,kBAACwE,GAAA,EAAD,CAAWzE,QAAS,CAAEC,KAAM,oBACvBmD,EACG,kBAAC,GAAD,CAAmB2G,YAAa8H,IAEhC,kBAAC,GAAD,CACI9H,YAAa8H,EACb3O,iBAAkBA,OCvBpC8O,G,4MACF1O,MAAQ,CACJ2O,iBAAiB,EACjBC,gBAAgB,G,EAOZC,mBAAqB,SAACF,GAC1B,EAAKG,SAAS,CAAEH,qB,EAGZI,qBAAuB,SAACH,GACvB,EAAKnO,MAAMX,UACZ,EAAKgP,SAAS,CAAEH,iBAAiB,EAAOC,oB,EAIxCI,aAAe,WACf,EAAKvO,MAAMX,UACX9I,EAAK7C,UACAmE,MAAK,WACF,EAAKmI,MAAMzH,SAAS7E,QAEvBoE,OAAM,SAACT,GACJD,QAAQC,MAAM,oBAAqBA,O,kEApB/CmX,KAAKxO,MAAMzH,UCrBiE,SAChFA,GAEAhC,EAAKkY,mBAAL,+BAAA7X,EAAA,MAAwB,WAAOyI,GAAP,eAAAzI,EAAA,sEACOH,EAA6B4I,GADpC,QACdqP,EADc,UAGhBnW,GpCaW7B,EoCZA,CACHqH,YAAa2Q,EAAa3Q,YAC1B7G,MAAOwX,EAAaxX,MACpBH,IAAK2X,EAAa3X,KpCS0B,CAC5DpD,KAAMF,EAAmBkb,cACzB9a,QAAS6C,KoCRD6B,GhCiBmB9C,EgCjBKiZ,EAAajZ,QhCiB0B,CACvE9B,KAAM2C,EAAkBsY,eACxB/a,QAAS4B,KgClBD8C,G/B6BiBrD,E+B7BKwZ,EAAaxZ,M/B6BmB,CAC9DvB,KAAMuE,EAAe2W,aACrBhb,QAASqB,M+B7BAwZ,GACDnW,EAAS7E,KAdO,iC/BwCA,IAACwB,EDbEO,EJXRiB,IoChBK,OAAxB,4D,+BD2CU,IAAD,OACG2I,EAAamP,KAAKxO,MAAlBX,SADH,EAEuCmP,KAAKjP,MAAzC2O,EAFH,EAEGA,gBAAiBC,EAFpB,EAEoBA,eACzB,OACI,kBAAC,IAAMrT,SAAP,KACI,kBAAC,GAAD,CACIoE,eAAgB,kBAAM,EAAKkP,oBAAmB,IAC9CjP,iBAAkB,kBAAM,EAAKmP,sBAAqB,IAClDlP,SAAUoP,KAAKD,eAEnB,kBAAC,GAAD,CACIhQ,OAAQ2P,EACR/O,iBAAkB,kBAAM,EAAKmP,sBAAqB,IAClDhU,QAAS,kBAAM,EAAK8T,oBAAmB,OAEzC/O,GACE,kBAAC,GAAD,CACId,OAAQ4P,EACR7T,QAAS,kBAAM,EAAKgU,sBAAqB,MAGhDjP,EACG,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAUF,iBAAkB,kBAAM,EAAKmP,sBAAqB,W,GAxDvDxF,IAAMgG,WAmElBC,GAAMC,aAJK,SAACzP,GAAD,MAA2B,CAC/CF,SAAUE,EAAMF,YAGD2P,CAAyBf,I,UErF/BgB,GAAaC,YAAgBC,MCHpB,SAACC,GAAD,OAAqC,SAACC,GAAD,OAA8B,SAACC,GACtFlY,QAAQmY,MAAMD,EAAO3b,MACrByD,QAAQoY,IAAI,gBAAiBF,GAC7B,IAAMG,EAAcJ,EAAKC,GAGzB,OAFAlY,QAAQoY,IAAI,iBAAkBJ,EAAMM,YACpCtY,QAAQuY,WACDF,O,kBCJLG,GAA+B,GCI/BC,GAAmC,CACrCxO,UAAW,GACXkE,cAAenH,GAAcqH,OCJ3BqK,GAA2B,GCapBC,GAAwDC,YAAgB,CACjF3Q,SCfoB,WAA+E,IAA9EE,EAA6E,uDAFhE,KAE0B+P,EAAsC,uCAClG,OAAQA,EAAO3b,MACX,KAAKF,EAAmBkb,cAExB,KAAKlb,EAAmBG,gBACpB,OAAO0b,EAAOzb,QAClB,QACI,OAAO0L,IDSf9J,QHfmB,WAAoF,IAAnF8J,EAAkF,uDAA1EqQ,GAAqBN,EAAqD,uCACtG,OAAQA,EAAO3b,MACX,KAAK2C,EAAkBsY,eACnB,OAAO,eACArP,EADP,GAEO+P,EAAOzb,SAElB,KAAKyC,EAAkBmC,UACnB,OAAO,eACA8G,EADP,eAEK+P,EAAOzb,QAAQmB,GAAKsa,EAAOzb,UAEpC,KAAKyC,EAAkB+C,aAAvB,MACaiW,EAAOzb,QAAuBoc,GAAS1Q,EADpD,gBACoDA,EADpD,gBAEI,OAAO,eACA0Q,GAEX,KAAKxc,EAAmBG,gBACpB,OAAOgc,GACX,QACI,OAAOrQ,IGJfrK,MDdiB,WAGR,IAFTqK,EAEQ,uDAFAuQ,GACRR,EACQ,uCACR,OAAQA,EAAO3b,MACX,KAAKuE,EAAe2W,aAChB,OAAO,eACAtP,EADP,GAEO+P,EAAOzb,SAGlB,KAAKqE,EAAeuB,QAChB,OAAO,eACA8F,EADP,eAEK+P,EAAOzb,QAAQmB,GAAKsa,EAAOzb,UAGpC,KAAKqE,EAAe0B,WAAa,IAAD,EACnB0V,EAAOzb,QAA2Boc,GAAS1Q,EADxB,gBACwBA,EADxB,gBAE5B,OAAO,eACA0Q,GAGX,KAAK/X,EAAe6B,kBAAoB,IAAD,EACPuV,EAAOzb,QAA3ByB,EAD2B,EAC3BA,OAAQG,EADmB,EACnBA,QAChB,OAAO,eACA8J,EADP,eAEKjK,EAFL,eAGWiK,EAAMjK,GAHjB,CAIQG,cAIZ,KAAKa,EAAkB+C,aACnB,OAAOpE,EAAsBsK,EAAO+P,EAAOzb,SAE/C,KAAKJ,EAAmBG,gBACpB,OAAOkc,GACX,QACI,OAAOvQ,ICxBf8B,UFVqB,WAAyE,IAAxE9B,EAAuE,uDAA/DsQ,GAAuBP,EAAwC,uCAC7F,OAAQA,EAAO3b,MACX,KAAK0K,GAAoBiD,iBACrB,OAAO,eACA/B,EADP,CAEI8B,UAAWiO,EAAOzb,UAG1B,KAAKwK,GAAoBoP,oBACrB,MAAO,CACHlI,cAAe+J,EAAOzb,QACtBwN,UAAW,IAGnB,QACI,OAAO9B,MIfC2Q,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2D,WCLjClB,GAAQmB,YAAYR,GAAad,IAEvCuB,IAASC,OACD,kBAAC,IAAD,CAAUrB,MAAOA,IACb,kBAACL,GAAD,OAER/W,SAAS0Y,eAAe,SDyHpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBhZ,MAAK,SAACiZ,GACHA,EAAaC,aAAajZ,MAAMV,QAAQC,UAE3CS,OAAM,SAACT,GACJD,QAAQC,MAAMA,EAAMkE,c","file":"static/js/main.c4015778.chunk.js","sourcesContent":["import { Nullable } from '../utils/helpers';\r\n\r\nexport type AuthUser = {\r\n    uid: string;\r\n    email?: string | null;\r\n    displayName?: string | null;\r\n};\r\n\r\nexport type UserData = Nullable<AuthUser>;\r\n\r\nexport enum AuthUserActionType {\r\n    SetAuthedUser = 'SetAuthedUser',\r\n    UnsetAuthedUser = 'UnsetAuthedUser',\r\n}\r\n\r\nexport type SetAuthedUserAction = {\r\n    type: AuthUserActionType.SetAuthedUser;\r\n    payload: AuthUser;\r\n};\r\n\r\nexport type UnsetAuthedUserAction = {\r\n    type: AuthUserActionType.UnsetAuthedUser;\r\n    payload: null;\r\n};\r\n\r\nexport type AuthUserActions = SetAuthedUserAction | UnsetAuthedUserAction;\r\n\r\nexport const signIn = (user: AuthUser): SetAuthedUserAction => ({\r\n    type: AuthUserActionType.SetAuthedUser,\r\n    payload: user,\r\n});\r\n\r\nexport const signOut = (): UnsetAuthedUserAction => ({\r\n    type: AuthUserActionType.UnsetAuthedUser,\r\n    payload: null,\r\n});\r\n","import { Teams } from '../actions/teams';\r\n\r\nexport type Nullable<T> = T | null;\r\n\r\nexport const generateUniqueId = (): string => {\r\n    return Math.random().toString(36).substr(2, 9) + '_' + new Date().getTime().toString();\r\n};\r\nexport const noop = (..._params: any) => {\r\n    //\r\n};\r\n\r\nexport const transformCollection = (\r\n    collection: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\r\n): Record<string, any> => {\r\n    return collection.docs.reduce((agg, curr) => {\r\n        const currentDocument = curr.data();\r\n        return Object.assign(agg, { [currentDocument.id]: currentDocument });\r\n    }, {});\r\n};\r\n\r\nexport const removeMemberFromTeams = (teams: Teams, memberToRemove: string): Teams => {\r\n    return Object.entries(teams).reduce((teamAgg, [teamId, team]) => {\r\n        const newTeamMembers = team.members.filter(memberId => memberId !== memberToRemove);\r\n        return Object.assign(teamAgg, {\r\n            [teamId]: {\r\n                ...team,\r\n                members: newTeamMembers\r\n            }\r\n        })\r\n    }, {});\r\n}\r\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { AuthUser, UserData } from '../actions/authUser';\nimport { Member } from '../actions/members';\nimport { Team, Teams } from '../actions/teams';\nimport { firebaseConfig } from './credentials';\nimport { removeMemberFromTeams, transformCollection } from './helpers';\n\nexport type FirebaseConfig = {\n    apiKey: string;\n    authDomain: string;\n    databaseURL: string;\n    projectId: string;\n    storageBucket: string;\n    messagingSenderId: string;\n    appId: string;\n    measurementId: string;\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const firebaseGenerateUserDocument = async (\n    user: UserData,\n    additionalData?: any\n): Promise<any> => {\n    if (user === null) {\n        return;\n    }\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const userData = await userRef.get();\n    if (!userData.exists) {\n        const { email } = user;\n        try {\n            await userRef.set({\n                email,\n                ...additionalData,\n            });\n        } catch (e) {\n            console.error('error creating user document', e);\n        }\n    }\n    return firebaseGetUserDocument(user.uid);\n};\n\nconst firebaseGetUserDocument = async (uid: string) => {\n    if (!uid) {\n        return null;\n    }\n    try {\n        const userDocument = await firestore.doc(`users/${uid}`).get();\n        const userMembers = await firestore.collection(`users/${uid}/members`).get();\n        const userTeams = await firestore.collection(`users/${uid}/teams`).get();\n        return {\n            uid,\n            members: transformCollection(userMembers),\n            teams: transformCollection(userTeams),\n            ...userDocument.data(),\n        };\n    } catch (e) {\n        console.error('error getting user document', e);\n        return null;\n    }\n};\n\nexport function firebaseAddEntry(\n    user: AuthUser,\n    entry: Member,\n    key: 'members'\n): Promise<Member | null>;\nexport function firebaseAddEntry(user: AuthUser, entry: Team, key: 'teams'): Promise<Team | null>;\nexport function firebaseAddEntry(\n    user: AuthUser,\n    entry: Member | Team,\n    key: 'members' | 'teams'\n): Promise<Member | Team | null> {\n    const entryRef = firestore.collection(`users/${user.uid}/${key}`).doc(entry.id);\n    return entryRef\n        .set(entry)\n        .then(() => entry)\n        .catch((error) => {\n            console.error(error);\n            return null;\n        });\n}\n\nexport async function firebaseModifyMembers(user: AuthUser, teamId: string, members: string[]) {\n    const entryRef = firestore.collection(`users/${user.uid}/teams`).doc(teamId);\n    const document = await entryRef.get();\n    const entryData = document.data();\n    if (!entryData) {\n        return;\n    }\n    return entryRef\n        .set(\n            {\n                members,\n            },\n            { merge: true }\n        )\n        .catch((error) => {\n            console.error(error);\n            return error;\n        });\n}\n\nexport function firebaseRemoveTeam(user: AuthUser, id: string) {\n    return firestore\n        .collection(`users/${user.uid}/teams`)\n        .doc(id)\n        .delete()\n        .then(() => id)\n        .catch((error) => {\n            console.error(error);\n            return null;\n        });\n}\n\nexport function firebaseRemoveMember(user: AuthUser, id: string) {\n    const userMembers = firestore.collection(`users/${user.uid}/members`).doc(id).delete();\n    const userTeams = firestore.collection(`users/${user.uid}/teams`).get();\n\n    return Promise.all([userMembers, userTeams])\n        .then(([_members, teams]) => {\n            const newTeams = removeMemberFromTeams(transformCollection(teams) as Teams, id);\n            teams.forEach((team) => {\n                team.ref\n                    .set(newTeams[team.id])\n                    .then(() => {\n                        return id;\n                    })\n                    .catch((error) => {\n                        console.error(`error removing member: ${id} from team: ${team.id}`, error);\n                        return error;\n                    });\n            });\n        })\n        .then(() => id)\n        .catch((error) => {\n            console.error('error removing member', error);\n            return null;\n        });\n}\n","export const firebaseConfig = {\n    apiKey: 'AIzaSyD1DhpEefzJEvdt45Jkmfmzx4-v2sGdjo4',\n    authDomain: 'triage-wheel-of-misfortune.firebaseapp.com',\n    databaseURL: 'https://triage-wheel-of-misfortune.firebaseio.com',\n    projectId: 'triage-wheel-of-misfortune',\n    storageBucket: 'triage-wheel-of-misfortune.appspot.com',\n    messagingSenderId: '78360184138',\n    appId: '1:78360184138:web:b9031c96b71ec8a1b7adb3',\n    measurementId: 'G-PEZM3SHEVS',\n};\n","import { Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { RootStateActions } from '../reducers';\r\nimport { firebaseAddEntry, firebaseRemoveMember } from '../utils/firebase';\r\nimport { generateUniqueId } from '../utils/helpers';\r\nimport { AuthUser } from './authUser';\r\n\r\nexport type Member = {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n};\r\n\r\nexport type Members = Record<string, Member>;\r\n\r\nexport enum MembersActionType {\r\n    ReceiveMembers = 'ReceiveMembers',\r\n    AddMember = 'AddMember',\r\n    RemoveMember = 'RemoveMember',\r\n}\r\n\r\nexport type ReceiveMembersAction = {\r\n    type: MembersActionType.ReceiveMembers;\r\n    payload: Members;\r\n};\r\n\r\nexport type AddMemberAction = {\r\n    type: MembersActionType.AddMember;\r\n    payload: Member;\r\n};\r\n\r\nexport type RemoveMemberAction = {\r\n    type: MembersActionType.RemoveMember;\r\n    payload: string;\r\n};\r\n\r\nexport type MemberActions = ReceiveMembersAction | AddMemberAction | RemoveMemberAction;\r\n\r\nexport const receiveMembers = (members: Members): ReceiveMembersAction => ({\r\n    type: MembersActionType.ReceiveMembers,\r\n    payload: members,\r\n});\r\n\r\nexport const addMember = (member: Member): AddMemberAction => ({\r\n    type: MembersActionType.AddMember,\r\n    payload: member,\r\n});\r\n\r\nexport const addMemberToDB = (\r\n    authedUser: AuthUser,\r\n    firstName: string,\r\n    lastName: string\r\n): ThunkAction<Promise<void>, {}, {}, MemberActions> => (dispatch: Dispatch<RootStateActions>) => {\r\n    const id = generateUniqueId();\r\n    const newMember: Member = { id, firstName, lastName };\r\n    return firebaseAddEntry(authedUser, newMember, 'members')\r\n        .then((member) => {\r\n            if (member) {\r\n                dispatch(addMember(member));\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error adding member', error);\r\n        });\r\n};\r\n\r\nexport const removeMember = (memberid: string): RemoveMemberAction => ({\r\n    type: MembersActionType.RemoveMember,\r\n    payload: memberid,\r\n});\r\n\r\nexport const removeMemberFromDB = (\r\n    authedUser: AuthUser,\r\n    id: string\r\n): ThunkAction<Promise<void>, {}, {}, MemberActions> => (dispatch: Dispatch<RootStateActions>) => {\r\n    return firebaseRemoveMember(authedUser, id)\r\n        .then((removedUserId) => {\r\n            if (removedUserId) {\r\n                dispatch(removeMember(removedUserId));\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error adding member', error);\r\n        });\r\n};\r\n","import { Dispatch } from 'react';\nimport { ThunkAction } from 'redux-thunk';\nimport { RootStateActions } from '../reducers';\nimport { firebaseAddEntry, firebaseModifyMembers, firebaseRemoveTeam } from '../utils/firebase';\nimport { generateUniqueId } from '../utils/helpers';\nimport { AuthUser } from './authUser';\n\nexport type Team = {\n    id: string;\n    teamName: string;\n    members: string[];\n};\n\nexport type Teams = Record<string, Team>;\n\nexport enum TeamActionType {\n    ReceiveTeams = 'ReceiveTeams',\n    AddTeam = 'AddTeam',\n    RemoveTeam = 'RemoveTeam',\n    ManageTeamMembers = 'ReceiveTeamMembers',\n}\n\nexport type ReceiveTeamAction = {\n    type: TeamActionType.ReceiveTeams;\n    payload: Teams;\n};\n\nexport type AddTeamAction = {\n    type: TeamActionType.AddTeam;\n    payload: Team;\n};\n\nexport type RemoveTeamAction = {\n    type: TeamActionType.RemoveTeam;\n    payload: string;\n};\n\nexport type ManageTeamMembersAction = {\n    type: TeamActionType.ManageTeamMembers;\n    payload: {\n        teamId: string;\n        members: string[];\n    };\n};\n\nexport type TeamActions =\n    | ReceiveTeamAction\n    | AddTeamAction\n    | RemoveTeamAction\n    | ManageTeamMembersAction;\n\nexport const receiveTeams = (teams: Teams): ReceiveTeamAction => ({\n    type: TeamActionType.ReceiveTeams,\n    payload: teams,\n});\n\nexport const addTeam = (team: Team): AddTeamAction => ({\n    type: TeamActionType.AddTeam,\n    payload: team,\n});\n\nexport const addTeamToDB = (\n    authedUser: AuthUser,\n    teamName: string\n): ThunkAction<Promise<void>, {}, {}, TeamActions> => (dispatch: Dispatch<RootStateActions>) => {\n    const id = generateUniqueId();\n    const newTeam: Team = { id, teamName, members: [] };\n    return firebaseAddEntry(authedUser, newTeam, 'teams')\n        .then((member) => {\n            if (member) {\n                dispatch(addTeam(member));\n            }\n        })\n        .catch((error) => {\n            console.error('Error adding member', error);\n        });\n};\n\nexport const removeTeam = (teamId: string): RemoveTeamAction => ({\n    type: TeamActionType.RemoveTeam,\n    payload: teamId,\n});\n\nexport const removeTeamFromDB = (\n    authedUser: AuthUser,\n    id: string\n): ThunkAction<Promise<void>, {}, {}, TeamActions> => (dispatch: Dispatch<RootStateActions>) => {\n    return firebaseRemoveTeam(authedUser, id)\n        .then((removedUserId) => {\n            if (removedUserId) {\n                dispatch(removeTeam(removedUserId));\n            }\n        })\n        .catch((error) => {\n            console.error('Error adding member', error);\n        });\n};\n\nexport const manageTeamMembers = (teamId: string, members: string[]): ManageTeamMembersAction => ({\n    type: TeamActionType.ManageTeamMembers,\n    payload: {\n        teamId,\n        members,\n    },\n});\n\nexport const manageTeamMembersInDB = (\n    authedUser: AuthUser,\n    teamId: string,\n    members: string[]\n): ThunkAction<Promise<void>, {}, {}, TeamActions> => (dispatch: Dispatch<RootStateActions>) => {\n    return firebaseModifyMembers(authedUser, teamId, members)\n        .then(() => {\n            dispatch(manageTeamMembers(teamId, members));\n        })\n        .catch((error) => {\n            console.error('Error managing members', error);\n        });\n};\n","import { Dialog } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ForgotPasswordBody } from './ForgotPasswordBody';\r\nimport { PasswordRecoveryBody } from './PasswordRecoveryBody';\r\nimport { SignInBody } from './SignInBody';\r\nimport { SignUpBody } from './SignUpBody';\r\n\r\nexport enum ModalView {\r\n    SignIn = 'SignIn',\r\n    SignUp = 'SignUp',\r\n    ForgotPassword = 'ForgotPassword',\r\n    PasswordRecovery = 'PasswordRecovery',\r\n}\r\n\r\nexport type AnonymousDialogProps = {\r\n    isOpen: boolean;\r\n    onClose: VoidFunction;\r\n}\r\n\r\nexport const AnonymousDialog: React.FC<AnonymousDialogProps> = ({ isOpen, onClose }) => {\r\n    const [modalView, setModalView] = useState<ModalView>(ModalView.SignIn);\r\n\r\n    useEffect(() => {\r\n        if (!isOpen) {\r\n            setModalView(ModalView.SignIn)\r\n        }\r\n    }, [isOpen])\r\n\r\n    const renderContent = () => {\r\n        switch (modalView) {\r\n            case ModalView.SignIn: {\r\n                return (\r\n                        <SignInBody\r\n                        onClose={onClose}\r\n                        onSetModalView={setModalView}\r\n                        />\r\n                )\r\n            }\r\n            case ModalView.SignUp: {\r\n                return (\r\n                        <SignUpBody\r\n                        onClose={onClose}\r\n                        onSetModalView={setModalView}\r\n                        />\r\n                )\r\n            }\r\n            case ModalView.ForgotPassword: {\r\n                return (\r\n                        <ForgotPasswordBody\r\n                        onClose={onClose}\r\n                        onSetModalView={setModalView}\r\n                        />\r\n                )\r\n            }\r\n            case ModalView.PasswordRecovery: {\r\n                return (\r\n                    <PasswordRecoveryBody\r\n                        onClose={onClose}\r\n                    onSetModalView={setModalView}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Dialog\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            open={isOpen}\r\n            onClose={onClose}\r\n            classes={{ paper: 'anonymous-dialog__wrapper' }}\r\n        >\r\n            {renderContent()}\r\n        </Dialog>\r\n    )\r\n}\r\n","import { CircularProgress } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport const LoadingIndicator = () => {\r\n    return (\r\n        <div className={'anonymous-dialog__loading'}>\r\n            <CircularProgress />\r\n        </div>\r\n    )\r\n}\r\n","import {\n    Button,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { auth } from '../../utils/firebase';\nimport { ModalView } from './AnonymousDialog';\nimport { LoadingIndicator } from './LoadingIndicator';\n\nexport type ForgotPasswordBodyProps = {\n    onSetModalView: (modalView: ModalView) => void;\n    onClose: VoidFunction;\n};\n\nexport const ForgotPasswordBody: React.FC<ForgotPasswordBodyProps> = ({\n    onSetModalView,\n    onClose,\n}) => {\n    let mounted = true;\n    const [showLoadingIndicator, setShowLoadingIndicator] = useState<boolean>(false);\n    const [email, setEmail] = useState<string>('');\n    const [emailError, setEmailError] = useState<string>('');\n\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const { value } = event.currentTarget;\n        if (!mounted) {\n            return;\n        }\n        setEmailError('');\n        setEmail(value);\n    };\n\n    const handleRecoverPassword = (\n        event: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>\n    ) => {\n        event.preventDefault();\n        setShowLoadingIndicator(true);\n        auth.sendPasswordResetEmail(email)\n            .then(() => {\n                setShowLoadingIndicator(false);\n                onSetModalView(ModalView.PasswordRecovery);\n            })\n            .catch((error: any) => {\n                setShowLoadingIndicator(false);\n                if (error && mounted) {\n                    setEmailError(error.message);\n                }\n                console.error(error);\n            });\n    };\n\n    const handleClose = () => {\n        mounted = false;\n        onClose();\n    };\n\n    return (\n        <React.Fragment>\n            <DialogTitle>Password Recovery</DialogTitle>\n            <DialogContent>\n                {showLoadingIndicator && <LoadingIndicator />}\n                <DialogContentText>\n                    Enter an email adress to recover your password\n                </DialogContentText>\n                <div className=\"anonymous-dialog__form\">\n                    <form onSubmit={handleRecoverPassword}>\n                        <TextField\n                            value={email}\n                            margin=\"dense\"\n                            id=\"email\"\n                            label=\"Email Address\"\n                            type=\"email\"\n                            fullWidth\n                            error={emailError !== ''}\n                            helperText={emailError !== '' && emailError}\n                            onChange={onChangeHandler}\n                        />\n                        <Button\n                            classes={{ root: 'anonymous-dialog__submit' }}\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={email === '' || emailError !== ''}\n                            variant=\"contained\"\n                        >\n                            Recover Password\n                        </Button>\n                    </form>\n                </div>\n                <div className=\"anonymous-dialog__bottom-text\">\n                    <DialogContentText>\n                        Don't have an account?{' '}\n                        <button\n                            className=\"anonymous-dialog__bottom-button\"\n                            onClick={() => onSetModalView(ModalView.SignUp)}\n                        >\n                            Sign Up\n                        </button>\n                        {' / '}\n                        <button\n                            className=\"anonymous-dialog__bottom-button\"\n                            onClick={() => onSetModalView(ModalView.SignIn)}\n                        >\n                            Sign In\n                        </button>\n                    </DialogContentText>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"default\">\n                    Cancel\n                </Button>\n            </DialogActions>\n        </React.Fragment>\n    );\n};\n","import { Button, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { ModalView } from './AnonymousDialog';\r\n\r\nexport type PasswordRecoveryBodyProps = {\r\n    onSetModalView: (modalView: ModalView) => void;\r\n    onClose: VoidFunction;\r\n}\r\n\r\nexport const PasswordRecoveryBody: React.FC<PasswordRecoveryBodyProps> = ({ onSetModalView, onClose }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <DialogTitle>Forgot Password</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Password recovery email has been sent to your email address.\r\n                </DialogContentText>\r\n                <div className=\"anonymous-dialog__bottom-text\">\r\n                    <DialogContentText>\r\n                        <button\r\n                            className=\"anonymous-dialog__bottom-button\"\r\n                            onClick={() => onSetModalView(ModalView.SignUp)}\r\n                        >\r\n                            Sign Up\r\n                            </button>\r\n                        {' / '}\r\n                        <button\r\n                            className=\"anonymous-dialog__bottom-button\"\r\n                            onClick={() => onSetModalView(ModalView.SignIn)}\r\n                        >\r\n                            Sign In\r\n                            </button>\r\n                    </DialogContentText>\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import {\n    Button,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n} from '@material-ui/core';\nimport React, { useMemo, useState } from 'react';\nimport { auth } from '../../utils/firebase';\nimport { ModalView } from './AnonymousDialog';\nimport { LoadingIndicator } from './LoadingIndicator';\n\nexport type SignInBodyProps = {\n    onSetModalView: (modalView: ModalView) => void;\n    onClose: VoidFunction;\n};\n\nexport const SignInBody: React.FC<SignInBodyProps> = ({ onSetModalView, onClose }) => {\n    let mounted = true;\n    const [showLoadingIndicator, setShowLoadingIndicator] = useState<boolean>(false);\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [signInError, setSignInError] = useState<string>('');\n\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        event.preventDefault();\n        if (!mounted) {\n            return;\n        }\n        const { id, value } = event.currentTarget;\n        if (id === 'email') {\n            setEmail(value);\n        }\n        if (id === 'password') {\n            setPassword(value);\n        }\n        if (signInError !== '') {\n            setSignInError('');\n        }\n    };\n\n    const handleSignIn = async (\n        event: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>\n    ) => {\n        event.preventDefault();\n        setShowLoadingIndicator(true);\n        if (mounted) {\n            auth.signInWithEmailAndPassword(email, password)\n                .then(() => {\n                    setShowLoadingIndicator(false);\n                    onClose();\n                })\n                .catch((error) => {\n                    setPassword('');\n                    setShowLoadingIndicator(false);\n                    setSignInError(error.message);\n                });\n        }\n    };\n\n    const handleClose = () => {\n        mounted = false;\n        onClose();\n    };\n\n    const isFormCorrect = useMemo(() => {\n        return password !== '' && email !== '';\n    }, [email, password]);\n\n    return (\n        <React.Fragment>\n            <DialogTitle id=\"form-dialog-title\">Sign In</DialogTitle>\n            <DialogContent>\n                {showLoadingIndicator && <LoadingIndicator />}\n                <DialogContentText>Sign in to continue</DialogContentText>\n                <form onSubmit={handleSignIn} className=\"anonymous-dialog__form\">\n                    <TextField\n                        value={email}\n                        margin=\"dense\"\n                        id=\"email\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                        helperText={signInError !== '' && signInError}\n                        error={signInError !== ''}\n                        onChange={onChangeHandler}\n                    />\n                    <TextField\n                        value={password}\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        fullWidth\n                        onChange={onChangeHandler}\n                    />\n                    <Button\n                        classes={{ root: 'anonymous-dialog__submit' }}\n                        type=\"submit\"\n                        color=\"primary\"\n                        disabled={!isFormCorrect}\n                        variant=\"contained\"\n                    >\n                        Sign In\n                    </Button>\n                </form>\n                <div className=\"anonymous-dialog__bottom-text\">\n                    <DialogContentText>\n                        Don't have an account?{' '}\n                        <button\n                            className=\"anonymous-dialog__bottom-button\"\n                            onClick={() => onSetModalView(ModalView.SignUp)}\n                        >\n                            Sign Up\n                        </button>\n                        {' / '}\n                        <button\n                            className=\"anonymous-dialog__bottom-button\"\n                            onClick={() => onSetModalView(ModalView.ForgotPassword)}\n                        >\n                            Password Recovery\n                        </button>\n                    </DialogContentText>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"default\">\n                    Cancel\n                </Button>\n            </DialogActions>\n        </React.Fragment>\n    );\n};\n","import {\n    Button,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n} from '@material-ui/core';\nimport React, { useMemo, useState } from 'react';\nimport { auth, firebaseGenerateUserDocument } from '../../utils/firebase';\nimport { ModalView } from './AnonymousDialog';\nimport { LoadingIndicator } from './LoadingIndicator';\n\nexport type SignUpBodyProps = {\n    onSetModalView: (modalView: ModalView) => void;\n    onClose: VoidFunction;\n};\n\nexport const SignUpBody: React.FC<SignUpBodyProps> = ({ onSetModalView, onClose }) => {\n    let mounted = true;\n    const [showLoadingIndicator, setShowLoadingIndicator] = useState<boolean>(false);\n    const [name, setName] = useState<string>('');\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [repeatedPassword, setRepeatedPassword] = useState<string>('');\n    const [emailError, setEmailError] = useState<string>('');\n    const [passwordError, setPasswordError] = useState<string>('');\n\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        if (!mounted) {\n            return;\n        }\n        const { id, value } = event.currentTarget;\n        if (id === 'name') {\n            setName(value);\n        }\n        if (id === 'email') {\n            setEmail(value);\n        }\n        if (id === 'password') {\n            setPassword(value);\n        }\n        if (id === 'password-repeat') {\n            setRepeatedPassword(value);\n        }\n    };\n\n    const handleSignUp = async (\n        event: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>\n    ) => {\n        event.preventDefault();\n        setShowLoadingIndicator(true);\n        if (mounted) {\n            try {\n                const { user } = await auth.createUserWithEmailAndPassword(email, password);\n                setShowLoadingIndicator(false);\n                firebaseGenerateUserDocument(user, { displayName: name }).catch((error) => {\n                    console.error('error in SignUpBody:', error);\n                });\n            } catch (error) {\n                setShowLoadingIndicator(false);\n                if (error.code.includes('password') && mounted) {\n                    setPasswordError(error.message);\n                }\n                if (error.code.includes('email') && mounted) {\n                    setEmailError(error.message);\n                }\n                console.error('Error while signing up', error);\n            }\n        }\n    };\n\n    const handleClose = () => {\n        mounted = false;\n        onClose();\n    };\n\n    const verifiedPassword = useMemo(() => {\n        if (password !== '' && repeatedPassword !== '') {\n            return password === repeatedPassword;\n        }\n        return true;\n    }, [password, repeatedPassword]);\n\n    const isFormCorrect = useMemo(() => {\n        return (\n            password !== '' &&\n            repeatedPassword !== '' &&\n            email !== '' &&\n            emailError === '' &&\n            passwordError === '' &&\n            verifiedPassword\n        );\n    }, [email, password, repeatedPassword, emailError, passwordError, verifiedPassword]);\n\n    const passwordHelperText = useMemo(() => {\n        if (passwordError !== '') {\n            return passwordError;\n        }\n        if (password !== repeatedPassword && repeatedPassword !== '') {\n            return 'Passwords do not match.';\n        }\n        return undefined;\n    }, [password, repeatedPassword, passwordError]);\n\n    return (\n        <React.Fragment>\n            <DialogTitle>Sign Up</DialogTitle>\n            <DialogContent>\n                {showLoadingIndicator && <LoadingIndicator />}\n                <DialogContentText>Register a new account</DialogContentText>\n                <form onSubmit={handleSignUp} className=\"anonymous-dialog__form\">\n                    <TextField\n                        value={name}\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Display name (optional)\"\n                        type=\"text\"\n                        fullWidth\n                        onChange={onChangeHandler}\n                    />\n                    <TextField\n                        value={email}\n                        margin=\"dense\"\n                        id=\"email\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                        helperText={emailError !== '' && emailError}\n                        error={emailError !== ''}\n                        onChange={onChangeHandler}\n                    />\n                    <TextField\n                        value={password}\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        fullWidth\n                        helperText={passwordHelperText}\n                        error={!verifiedPassword || passwordError !== ''}\n                        onChange={onChangeHandler}\n                    />\n                    <TextField\n                        value={repeatedPassword}\n                        margin=\"dense\"\n                        id=\"password-repeat\"\n                        label=\"Repeat Password\"\n                        type=\"password\"\n                        fullWidth\n                        helperText={passwordHelperText}\n                        error={!verifiedPassword || passwordError !== ''}\n                        onChange={onChangeHandler}\n                    />\n                    <Button\n                        classes={{ root: 'anonymous-dialog__submit' }}\n                        type=\"submit\"\n                        color=\"primary\"\n                        disabled={!isFormCorrect}\n                        variant=\"contained\"\n                    >\n                        Sign Up\n                    </Button>\n                </form>\n                <div className=\"anonymous-dialog__bottom-text\">\n                    <DialogContentText>\n                        Have an account?{' '}\n                        <button\n                            className=\"anonymous-dialog__bottom-button\"\n                            onClick={() => onSetModalView(ModalView.SignIn)}\n                        >\n                            Sign In\n                        </button>\n                    </DialogContentText>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"default\">\n                    Cancel\n                </Button>\n            </DialogActions>\n        </React.Fragment>\n    );\n};\n","export enum SelectionType {\r\n    Members = 'Members',\r\n    Teams = 'Teams',\r\n}\r\n\r\nexport type Selection = {\r\n    selection: string[];\r\n    selectionType: SelectionType;\r\n};\r\n\r\nexport enum SelectionActionType {\r\n    ReceiveSelection = 'ReceiveSelection',\r\n    ChangeSelectionType = 'ChangeSelectionType',\r\n}\r\n\r\nexport type ReceiveSelectionAction = {\r\n    type: SelectionActionType.ReceiveSelection;\r\n    payload: string[];\r\n};\r\n\r\nexport type ChangeSelectionAction = {\r\n    type: SelectionActionType.ChangeSelectionType;\r\n    payload: SelectionType;\r\n};\r\n\r\nexport type SelectionActions = ReceiveSelectionAction | ChangeSelectionAction;\r\n\r\nexport const receiveSelection = (selection: string[]): ReceiveSelectionAction => ({\r\n    type: SelectionActionType.ReceiveSelection,\r\n    payload: selection,\r\n});\r\nexport const changeSelectionType = (type: SelectionType): ChangeSelectionAction => ({\r\n    type: SelectionActionType.ChangeSelectionType,\r\n    payload: type,\r\n});\r\n","import { AppBar, Button, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootStateType } from '../../reducers';\nimport { noop } from '../../utils/helpers';\n\nexport type HeaderProps = {\n    onToggleDrawer: VoidFunction;\n    onShowLoginModal: VoidFunction;\n    onLogOut: VoidFunction;\n};\n\nexport const Header: React.FC<HeaderProps> = ({ onToggleDrawer, onShowLoginModal, onLogOut }) => {\n    const authUser = useSelector((state: RootStateType) => state.authUser);\n    return (\n        <AppBar position=\"static\" classes={{ root: 'app-bar' }}>\n            <Toolbar classes={{ root: 'app-bar__toolbar' }}>\n                <IconButton edge=\"start\" color=\"inherit\" onClick={onToggleDrawer}>\n                    <Menu />\n                </IconButton>\n                <Typography variant=\"h1\" className={'app_bar__title'}>\n                    {authUser &&\n                        `Hello, ${\n                            authUser.displayName ?? 'User'\n                        }. Welcome to Triage wheel of misfortune!`}\n                </Typography>\n                <div className=\"app-bar__user-menu\">\n                    {authUser ? (\n                        <Button\n                            color=\"inherit\"\n                            classes={{ root: 'app-bar__user-account-button' }}\n                            onClick={authUser ? onLogOut : noop}\n                        >\n                            Log Out\n                        </Button>\n                    ) : (\n                        <Button\n                            color=\"inherit\"\n                            classes={{ root: 'app-bar__user-account-button' }}\n                            onClick={!authUser ? onShowLoginModal : noop}\n                        >\n                            Log In\n                        </Button>\n                    )}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n};\n","import React from 'react';\n\nexport const WheelIcon: React.FC<React.HTMLAttributes<HTMLDivElement>> = (props) => {\n    return (\n        <div className={'homepage__icon'} {...props}>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                height=\"512px\"\n                viewBox=\"-56 0 512 512\"\n                width=\"512px\"\n                className=\"\"\n            >\n                <g>\n                    <path\n                        d=\"m400 229c0-45.636719-15.773438-90.273438-44.421875-125.6875-25.890625-32.011719-61.292969-55.386719-100.578125-66.636719v-36.675781h-110v36.675781c-38.945312 11.148438-74.050781 34.183594-99.902344 65.804688-29.082031 35.566406-45.097656 80.5-45.097656 126.519531 0 80.316406 47.59375 149.714844 116.054688 181.503906l-13.488282 71.496094h-28.566406v30h252v-30h-28.566406l-13.488282-71.496094c68.460938-31.789062 116.054688-101.1875 116.054688-181.503906zm-67.746094-106.824219c21.191406 26.203125 34.089844 58.347657 37.074219 91.824219h-126.90625c-1.867187-5.253906-4.679687-10.058594-8.234375-14.214844l63.457031-109.914062c12.90625 9.066406 24.59375 19.921875 34.609375 32.304687zm-157.253906-92.175781h50v15.785156l-25 25-25-25zm-22.480469 35.730469 47.480469 47.484375 47.488281-47.488282c8.292969 2.414063 16.382813 5.46875 24.195313 9.117188l-63.464844 109.921875c-2.667969-.496094-5.410156-.765625-8.21875-.765625s-5.550781.269531-8.21875.765625l-63.460938-109.917969c7.808594-3.648437 15.898438-6.699218 24.199219-9.117187zm62.480469 163.269531c0 8.269531-6.730469 15-15 15s-15-6.730469-15-15 6.730469-15 15-15 15 6.730469 15 15zm-146.679688-107.527344c9.894532-12.101562 21.375-22.722656 34.027344-31.609375l63.464844 109.921875c-3.554688 4.15625-6.371094 8.960938-8.234375 14.214844h-126.90625c3.007813-33.789062 16.109375-66.183594 37.648437-92.527344zm34.054688 246.621094c-39.890625-28.082031-67.203125-72.863281-71.707031-124.09375h126.910156c1.867187 5.253906 4.679687 10.058594 8.234375 14.214844zm30.71875 113.90625 11.476562-60.820312c17.609376 5.085937 36.207032 7.820312 55.429688 7.820312s37.820312-2.734375 55.429688-7.820312l11.476562 60.820312zm66.90625-83c-25.59375 0-49.875-5.695312-71.667969-15.867188l63.449219-109.898437c2.667969.492187 5.410156.765625 8.21875.765625s5.550781-.269531 8.21875-.765625l63.449219 109.898437c-21.792969 10.171876-46.074219 15.867188-71.667969 15.867188zm97.625-30.90625-63.4375-109.878906c3.554688-4.15625 6.371094-8.960938 8.234375-14.214844h126.910156c-4.503906 51.230469-31.816406 96.011719-71.707031 124.09375zm0 0\"\n                        data-original=\"#000000\"\n                        className=\"active-path\"\n                        data-old_color=\"#000000\"\n                        fill=\"#3F51B5\"\n                    />\n                </g>\n            </svg>\n        </div>\n    );\n};\n","import { Button, Container, Grid, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { WheelIcon } from './WheelIcon';\n\nexport type HomePageProps = {\n    onShowLoginModal: VoidFunction;\n};\n\nexport const HomePage: React.FC<HomePageProps> = ({ onShowLoginModal }) => {\n    return (\n        <Container classes={{ root: 'homepage__wrapper' }}>\n            <Grid container>\n                <Grid item xs={12} sm={3} classes={{ root: 'homepage__grid-container' }}>\n                    <WheelIcon />\n                </Grid>\n                <Grid\n                    item\n                    xs={12}\n                    sm={9}\n                    classes={{ root: 'homepage__grid-container homepage__text' }}\n                >\n                    <Container>\n                        <Typography variant=\"subtitle1\" classes={{ root: 'homepage__subtitle' }}>\n                            Welcome to:\n                        </Typography>\n                        <Typography\n                            classes={{ root: 'homepage__title' }}\n                            variant=\"h1\"\n                            component=\"h2\"\n                        >\n                            Triage wheel of misfortune\n                        </Typography>\n                        <Typography classes={{ root: 'homepage__body' }} variant=\"body1\">\n                            Having trouble with finding a volunteer to fix a bug in your project?\n                            <br />\n                            Fear no more, find the (not so) lucky winner of your special prize with\n                            this magnificent tool!\n                            <br />\n                            Just log in, add developers as participants and start saving your time!\n                        </Typography>\n                    </Container>\n                    <Container classes={{ root: 'homepage__button-wrapper' }}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={onShowLoginModal}>\n                            Create account to continue\n                        </Button>\n                    </Container>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\n\nexport const Guide = () => {\n    return (\n        <div className={'guide__container'}>\n            <Typography variant=\"h4\" gutterBottom>\n                How to use it?\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom>\n                Members and Teams management\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                There are two views in drawer, team view, and members view. <br />\n                In Teams view you can select whole team, check team participants or add existing\n                members to the team. <br />\n                In members view you can select individual members, add new members or remove them.\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom>\n                Selecting participants\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                Use drawer menu on the left to select participants for bug lottery. <br />\n                You can select individual members or whole teams.\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom>\n                Using the wheel\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                When participants are selected, use sliders below the wheel to adjust spinning\n                parameters and use spin the wheel button to find out the lucky winner. If you are\n                not satisfied with the result, you can reset the wheel, and start again.\n            </Typography>\n        </div>\n    );\n};\n","import { Button, Slider, Typography } from '@material-ui/core';\r\nimport React, { ChangeEvent, useEffect, useRef, useState } from 'react';\r\nimport Winwheel from 'winwheel';\r\nimport { Placeholder } from './Placeholder';\r\nimport { Triangle } from './Triangle';\r\nimport { randomInt } from './utils';\r\n\r\nexport enum SettingType {\r\n    Duration = 'duration',\r\n    Spins = 'spins',\r\n}\r\nexport type Participant = {\r\n    text: string;\r\n    fillStyle: string;\r\n};\r\nexport type Participants = Participant[];\r\n\r\nexport type WheelOfMisfortuneProps = {\r\n    participants: Participants;\r\n};\r\n\r\nexport const WheelOfMisfortune: React.FC<WheelOfMisfortuneProps> = ({ participants }) => {\r\n    const [hasBeenSpinned, setHasBeenSpinned] = useState<boolean>(false);\r\n    const [duration, setDuration] = useState<number>(3);\r\n    const [spins, setSpins] = useState<number>(4);\r\n    const winWheelRef = useRef<Winwheel | null>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n\r\n    const spin = () => {\r\n        if (winWheelRef.current !== null && !hasBeenSpinned) {\r\n            winWheelRef.current.startAnimation();\r\n            setHasBeenSpinned(true);\r\n        }\r\n    };\r\n\r\n    const reset = () => {\r\n        if (winWheelRef.current !== null && hasBeenSpinned) {\r\n            winWheelRef.current.stopAnimation();\r\n            setHasBeenSpinned(false);\r\n        }\r\n    };\r\n\r\n    const setSliderValue = (value: number, settingType: SettingType) => {\r\n        switch (settingType) {\r\n            case 'duration':\r\n                setDuration(value);\r\n                break;\r\n            case 'spins':\r\n                setSpins(value);\r\n                break;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (canvasRef?.current) {\r\n            winWheelRef.current = new Winwheel({\r\n                canvasId: canvasRef.current.id,\r\n                outerRadius: 200,\r\n                textFontSize: 13,\r\n                textAlignment: 'center',\r\n                numSegments: participants.length,\r\n                segments: participants,\r\n                animation: {\r\n                    type: 'spinToStop',\r\n                    easing: 'Power4.easeOut',\r\n                    duration: randomInt(duration, 10),\r\n                    spins: randomInt(spins, 10),\r\n                },\r\n                pins: {\r\n                    number: participants.length,\r\n                    fillStyle: 'silver',\r\n                    outerRadius: 5,\r\n                },\r\n            });\r\n        }\r\n    }, [participants, winWheelRef, canvasRef, hasBeenSpinned, duration, spins]);\r\n\r\n    useEffect(() => {\r\n        reset();\r\n        // eslint-disable-next-line\r\n    }, [participants]);\r\n\r\n    return (\r\n        <div className={'wof__container'}>\r\n            {participants.length >= 2 && participants.length < 50 ? (\r\n                <React.Fragment>\r\n                    <div className={'wof-canvas__wrapper'}>\r\n                        <Triangle\r\n                            className={'wof__pointer'}\r\n                            color1={'#ff7961'}\r\n                            color2={'#f44336'}\r\n                        />\r\n                        <canvas ref={canvasRef} id={'wof-canvas'} width=\"402\" height=\"402\" />\r\n                    </div>\r\n                    <div className={'wof-settings__wrapper'}>\r\n                        <Typography gutterBottom>Duration</Typography>\r\n                        <Slider\r\n                            value={duration}\r\n                            valueLabelDisplay=\"auto\"\r\n                            min={1}\r\n                            max={10}\r\n                            onChange={(_event: ChangeEvent<{}>, value: number | number[]) =>\r\n                                setSliderValue(value as number, SettingType.Duration)\r\n                            }\r\n                        />\r\n                        <Typography gutterBottom>Spins</Typography>\r\n                        <Slider\r\n                            value={spins}\r\n                            valueLabelDisplay=\"auto\"\r\n                            min={1}\r\n                            max={10}\r\n                            onChange={(_event: ChangeEvent<{}>, value: number | number[]) =>\r\n                                setSliderValue(value as number, SettingType.Spins)\r\n                            }\r\n                        />\r\n                        <Button\r\n                            classes={{ root: 'wof-settings__button' }}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            disabled={hasBeenSpinned}\r\n                            onClick={spin}\r\n                        >\r\n                            Spin the Wheel\r\n                        </Button>\r\n                        <Button\r\n                            classes={{ root: 'wof-settings__button' }}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            disabled={!hasBeenSpinned}\r\n                            onClick={reset}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                    </div>\r\n                </React.Fragment>\r\n            ) : (\r\n                <Placeholder />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import { Container, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { WheelIcon } from '../HomePage/WheelIcon';\n\nexport const Placeholder: React.FC = () => {\n    return (\n        <Container classes={{ root: 'placeholder__wrapper' }}>\n            <WheelIcon />\n            <Typography variant=\"subtitle1\">\n                Select between 2 and 50 participants to start\n            </Typography>\n        </Container>\n    );\n};\n","import React from 'react';\n\nexport type TriangleIconProps = {\n    className: string;\n    color1?: string;\n    color2?: string;\n};\n\nexport const Triangle: React.FC<TriangleIconProps> = ({ className, color1, color2 }) => {\n    return (\n        <div className={className}>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                x=\"0\"\n                y=\"0\"\n                enableBackground=\"new 0 0 512 512\"\n                version=\"1.1\"\n                viewBox=\"0 0 512 512\"\n                xmlSpace=\"preserve\"\n            >\n                <path\n                    fill={color2 ?? '#C9CFDE'}\n                    d=\"M505.505 408.198L293.767 56.972c-8.106-13.509-22.515-20.114-37.524-20.114-15.01 0-30.019 6.605-38.126 20.114L6.382 408.198c-8.406 13.81-8.406 30.621-.601 44.43 8.106 14.108 22.515 22.515 38.424 22.515H467.68c16.209 0 30.621-8.406 38.424-22.515 8.105-13.81 7.805-30.621-.599-44.43z\"\n                />\n                <path\n                    fill={color1 ?? '#B8BFCC'}\n                    d=\"M256.243 475.142H467.68c16.209 0 30.621-8.406 38.424-22.515 8.106-13.81 7.805-30.621-.599-44.43L293.767 56.972c-8.106-13.509-22.515-20.114-37.524-20.114v438.284z\"\n                />\n            </svg>\n        </div>\n    );\n};\n","export function randomInt(min, max) {\n    return min + Math.floor((max - min) * Math.random());\n}\n","import { Participants } from '../WheelOfMisfortune/WheelOfMisfortune';\r\n\r\nconst colors = [\r\n    '#ef5350',\r\n    '#f44336',\r\n    '#e53935',\r\n    '#d32f2f',\r\n    '#ec407a',\r\n    '#e91e63',\r\n    '#d81b60',\r\n    '#c2185b',\r\n    '#ab47bc',\r\n    '#9c27b0',\r\n    '#8e24aa',\r\n    '#7b1fa2',\r\n    '#673ab7',\r\n    '#5e35b1',\r\n    '#512da8',\r\n    '#4527a0',\r\n    '#3f51b5',\r\n    '#3949ab',\r\n    '#303f9f',\r\n    '#283593',\r\n    '#2196f3',\r\n    '#1e88e5',\r\n    '#1976d2',\r\n    '#1565c0',\r\n    '#03a9f4',\r\n    '#039be5',\r\n    '#0288d1',\r\n    '#0277bd',\r\n    '#00bcd4',\r\n    '#00acc1',\r\n    '#0097a7',\r\n    '#00838f',\r\n    '#009688',\r\n    '#00897b',\r\n    '#00796b',\r\n    '#00695c',\r\n    '#4caf50',\r\n    '#43a047',\r\n    '#388e3c',\r\n    '#2e7d32',\r\n    '#8bc34a',\r\n    '#7cb342',\r\n    '#689f38',\r\n    '#558b2f',\r\n    '#cddc39',\r\n    '#c0ca33',\r\n    '#afb42b',\r\n    '#9e9d24',\r\n    '#ffeb3b',\r\n    '#fdd835',\r\n    '#fbc02d',\r\n    '#f9a825',\r\n    '#ffc107',\r\n    '#ffb300',\r\n    '#ffa000',\r\n    '#ff8f00',\r\n    '#ff9800',\r\n    '#fb8c00',\r\n    '#f57c00',\r\n    '#ef6c00',\r\n    '#ff5722',\r\n    '#f4511e',\r\n    '#e64a19',\r\n    '#d84315',\r\n];\r\n\r\nconst getRandomColor = () => {\r\n    const colorsCount = colors.length;\r\n    const randomColorNumber = Math.floor(Math.random() * (colorsCount - 0 + 1));\r\n    return colors[randomColorNumber];\r\n};\r\n\r\nconst shuffleArray = (array: any[]) => {\r\n    return array.reduce((acc, _curr, i) => {\r\n        const j = Math.floor(Math.random() * i);\r\n        const temp = acc[i];\r\n        acc[i] = acc[j];\r\n        acc[j] = temp;\r\n        return array;\r\n    }, array);\r\n};\r\n\r\nexport const prepareParticipantsData = (participants: string[]): Participants =>\r\n    shuffleArray(participants).map((participant) => ({\r\n        text: participant,\r\n        fillStyle: getRandomColor(),\r\n    }));\r\n","import { Container } from '@material-ui/core';\nimport React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootStateType } from '../../reducers';\nimport { Guide } from '../Guide/Guide';\nimport { useSelection } from '../WheelOfMisfortune/useSelection';\nimport { WheelOfMisfortune } from '../WheelOfMisfortune/WheelOfMisfortune';\nimport { prepareParticipantsData } from './utils';\n\nexport const MainApp: React.FC = () => {\n    const { members, teams, selection: selectionData } = useSelector(\n        (state: RootStateType) => state\n    );\n    const participants = useSelection(members, teams, selectionData);\n\n    const participantsData = useMemo(() => prepareParticipantsData(participants), [participants]);\n\n    return (\n        <Container classes={{ root: 'main-app__container' }}>\n            <Guide />\n            <WheelOfMisfortune participants={participantsData} />\n        </Container>\n    );\n};\n","import { useMemo } from 'react';\nimport { Members } from '../../actions/members';\nimport { Selection, SelectionType } from '../../actions/selection';\nimport { Teams } from '../../actions/teams';\n\nexport const useSelection = (members: Members, teams: Teams, selectionData: Selection): string[] =>\n    useMemo(() => {\n        switch (selectionData.selectionType) {\n            case SelectionType.Members: {\n                return selectionData.selection.map(\n                    (memberId) => `${members[memberId].firstName} ${members[memberId].lastName}`\n                );\n            }\n            case SelectionType.Teams: {\n                const selectedTeamsMembers = Object.entries(teams).reduce<string[]>(\n                    (selectedMembers, [teamId, { members: teamMembers }]) => {\n                        if (selectionData.selection.includes(teamId)) {\n                            const membersToAdd = teamMembers.filter(\n                                (member) => !selectedMembers.includes(member)\n                            );\n                            return [...selectedMembers, ...membersToAdd];\n                        }\n                        return selectedMembers;\n                    },\n                    []\n                );\n                return selectedTeamsMembers.map(\n                    (memberId) => `${members[memberId].firstName} ${members[memberId].lastName}`\n                );\n            }\n        }\n    }, [members, teams, selectionData]);\n","import { Button, Container, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport type DrawerSignUpContentProps = {\r\n    onShowLoginModal: VoidFunction;\r\n    closeButton: React.ReactElement;\r\n};\r\n\r\nexport const DrawerSignUpContent: React.FC<DrawerSignUpContentProps> = ({\r\n    onShowLoginModal,\r\n    closeButton,\r\n}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Container\r\n                classes={{\r\n                    root: 'drawer__close-button-wrapper drawer__close-button-wrapper--anonymous',\r\n                }}\r\n            >\r\n                {closeButton}\r\n            </Container>\r\n            <Container classes={{ root: 'drawer__anonymous-content' }}>\r\n                <Typography variant=\"h4\" classes={{ root: 'drawer__sign-in-title' }} gutterBottom>\r\n                    You are not signed in.\r\n                </Typography>\r\n                <Typography\r\n                    variant=\"subtitle1\"\r\n                    classes={{ root: 'drawer__sign-in-subtitle' }}\r\n                    gutterBottom\r\n                >\r\n                    Please sign in to continue\r\n                </Typography>\r\n                <Button\r\n                    color=\"inherit\"\r\n                    classes={{ root: 'drawer__sign-in' }}\r\n                    onClick={onShowLoginModal}\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from 'react';\n\nexport type TabContentProps<T> = {\n    children?: React.ReactNode;\n    index: T;\n    value: T;\n};\n\nexport const TabContent = <T,>({ children, index, value }: TabContentProps<T>) => {\n    return index === value ? <div className={'drawer__tab-content'}>{children}</div> : null;\n};\n","import { Button, Container, Dialog } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport React, { useState } from 'react';\n\nexport type DrawerListWrapperProps = {\n    addButtonLabel: string;\n    onRenderAddDialogContent: (closeDialog: VoidFunction) => React.ReactNode;\n    onClearData?: VoidFunction;\n};\n\nexport const DrawerListWrapper: React.FC<DrawerListWrapperProps> = ({\n    addButtonLabel,\n    onRenderAddDialogContent,\n    children,\n    onClearData,\n}) => {\n    const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\n\n    const handleClose = () => {\n        setIsFormOpen(false);\n        if (onClearData) {\n            onClearData();\n        }\n    };\n\n    return (\n        <Container classes={{ root: 'drawer-list__container' }}>\n            {children}\n            <Container classes={{ root: 'drawer-tab__footer' }}>\n                <Button\n                    onClick={() => setIsFormOpen(true)}\n                    classes={{ root: 'drawer-tab__footer-button' }}\n                    startIcon={<Add />}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={isFormOpen}\n                >\n                    {addButtonLabel}\n                </Button>\n                <Dialog\n                    open={isFormOpen}\n                    onClose={handleClose}\n                    classes={{ paper: 'drawer-tab__dialog' }}\n                >\n                    {onRenderAddDialogContent(handleClose)}\n                </Dialog>\n            </Container>\n        </Container>\n    );\n};\n","import {\n    Checkbox,\n    IconButton,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n} from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport React from 'react';\n\nexport type DrawerListItemProps = {\n    selected: boolean;\n    label: string;\n    onPrimaryAction: (checked: boolean) => void;\n    onDeleteAction: VoidFunction;\n};\n\nexport const DrawerMembersListItem: React.FC<DrawerListItemProps> = ({\n    onPrimaryAction,\n    selected,\n    label,\n    onDeleteAction,\n}) => {\n    return (\n        <ListItem button onClick={() => onPrimaryAction(!selected)}>\n            <ListItemIcon>\n                <Checkbox\n                    edge=\"start\"\n                    color=\"primary\"\n                    checked={selected}\n                    tabIndex={-1}\n                    disableRipple\n                />\n            </ListItemIcon>\n            <ListItemText classes={{ root: 'member-list__label' }} primary={label} />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" onClick={onDeleteAction}>\n                    <Delete color=\"action\" />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n};\n","import {\n    Button,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    List,\n    ListSubheader,\n    TextField,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMemberToDB, removeMemberFromDB } from '../../actions/members';\nimport { receiveSelection } from '../../actions/selection';\nimport { RootStateType } from '../../reducers';\nimport { DrawerListWrapper } from './DrawerListWrapper';\nimport { DrawerMembersListItem } from './DrawerMembersListItem';\n\nexport const DrawerMembersList: React.FC = () => {\n    const [firstName, setFirstName] = useState<string>('');\n    const [lastName, setLastName] = useState<string>('');\n    const { members, authUser, selection } = useSelector((state: RootStateType) => state);\n    const dispatch = useDispatch();\n\n    const handleRemoveUser = (id: string) => {\n        if (authUser) {\n            dispatch(removeMemberFromDB(authUser, id));\n        }\n    };\n\n    const handleAddUser = (handleClose: VoidFunction) => {\n        if (authUser && firstName !== '' && lastName !== '') {\n            dispatch(addMemberToDB(authUser, firstName, lastName));\n        }\n        handleClose();\n    };\n\n    const handleClearData = () => {\n        setFirstName('');\n        setLastName('');\n    };\n\n    const handleSelectUser = (id: string, checked: boolean) => {\n        const newSelection = checked\n            ? [...selection.selection, id]\n            : selection.selection.filter((member) => member !== id);\n        dispatch(receiveSelection(newSelection));\n    };\n\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const { id, value } = event.currentTarget;\n        if (id === 'firstName') {\n            setFirstName(value);\n        }\n        if (id === 'lastName') {\n            setLastName(value);\n        }\n    };\n\n    const renderAddDialogContent = (handleClose: VoidFunction) => {\n        return (\n            <React.Fragment>\n                <DialogTitle>Add member</DialogTitle>\n                <form onSubmit={() => handleAddUser(handleClose)}>\n                    <DialogContent>\n                        <DialogContentText>\n                            To add member, please enter new member data:\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            onChange={onChangeHandler}\n                            margin=\"dense\"\n                            id=\"firstName\"\n                            label=\"First Name\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeHandler}\n                            margin=\"dense\"\n                            id=\"lastName\"\n                            label=\"Last Name\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            onClick={() => handleAddUser(handleClose)}\n                            color=\"primary\"\n                            disabled={firstName === '' || lastName === ''}\n                        >\n                            Add new member\n                        </Button>\n                    </DialogActions>\n                </form>\n            </React.Fragment>\n        );\n    };\n\n    return (\n        <DrawerListWrapper\n            addButtonLabel=\"Add new member\"\n            onClearData={handleClearData}\n            onRenderAddDialogContent={renderAddDialogContent}\n        >\n            <ListSubheader component=\"div\">Members</ListSubheader>\n            <List classes={{ root: 'drawer-list__content' }} component=\"div\">\n                {Object.values(members).map((member, memberIndex) => (\n                    <DrawerMembersListItem\n                        key={memberIndex}\n                        label={`${member.firstName} ${member.lastName}`}\n                        selected={selection.selection.includes(member.id)}\n                        onPrimaryAction={(checked: boolean) => handleSelectUser(member.id, checked)}\n                        onDeleteAction={() => handleRemoveUser(member.id)}\n                    />\n                ))}\n            </List>\n        </DrawerListWrapper>\n    );\n};\n","import {\n    Checkbox,\n    Collapse,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Menu,\n    MenuItem,\n    Typography,\n} from '@material-ui/core';\nimport {\n    Delete,\n    ExpandLess,\n    ExpandMore,\n    GroupAdd,\n    MoreVert,\n    Person,\n    Warning,\n} from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeTeamFromDB, Team } from '../../actions/teams';\nimport { RootStateType } from '../../reducers';\n\nexport type DrawerTeamsListItemProps = {\n    team: Team;\n    selected: boolean;\n    onPrimaryAction: (checked: boolean) => void;\n    onManageMembers: (teamId: string) => void;\n};\n\nexport const DrawerTeamsListItem: React.FC<DrawerTeamsListItemProps> = ({\n    team,\n    selected,\n    onManageMembers,\n    onPrimaryAction,\n}) => {\n    const [isListOpen, setIsListOpen] = useState<boolean>(false);\n    const [isRemovalClicked, setIsRemovalClicked] = useState<boolean>(false);\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const { authUser, members } = useSelector((state: RootStateType) => state);\n    const dispatch = useDispatch();\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setIsRemovalClicked(false);\n        setAnchorEl(null);\n    };\n\n    const handleRemoveTeam = () => {\n        if (authUser) {\n            handleClose();\n            dispatch(removeTeamFromDB(authUser, team.id));\n        }\n    };\n\n    const handleToggleOpen = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.stopPropagation();\n        setIsListOpen(!isListOpen);\n    };\n\n    return (\n        <React.Fragment>\n            <ListItem button onClick={() => onPrimaryAction(!selected)}>\n                <ListItemIcon>\n                    <Checkbox\n                        edge=\"start\"\n                        color=\"primary\"\n                        checked={selected}\n                        tabIndex={-1}\n                        disableRipple\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    classes={{ root: 'member-list__label' }}\n                    primary={team.teamName}\n                    secondary={Object.values(team.members).length === 0 && 'No members'}\n                />\n                {Object.values(team.members).length > 0 && (\n                    <IconButton\n                        edge=\"end\"\n                        onClick={handleToggleOpen}\n                        classes={{ root: 'team-list__chevron-button' }}\n                    >\n                        {isListOpen ? <ExpandLess color=\"action\" /> : <ExpandMore color=\"action\" />}\n                    </IconButton>\n                )}\n                <ListItemSecondaryAction>\n                    <IconButton onClick={handleClick}>\n                        <MoreVert />\n                    </IconButton>\n                    <Menu anchorEl={anchorEl} keepMounted open={!!anchorEl} onClose={handleClose}>\n                        <MenuItem\n                            onClick={() => {\n                                onManageMembers(team.id);\n                                handleClose();\n                            }}\n                        >\n                            <ListItemIcon>\n                                <GroupAdd fontSize=\"small\" />\n                            </ListItemIcon>\n                            <Typography variant=\"inherit\">Manage members</Typography>\n                        </MenuItem>\n                        <MenuItem\n                            onClick={\n                                isRemovalClicked\n                                    ? handleRemoveTeam\n                                    : () => setIsRemovalClicked(true)\n                            }\n                        >\n                            <ListItemIcon>\n                                {isRemovalClicked ? (\n                                    <Warning fontSize=\"small\" />\n                                ) : (\n                                    <Delete fontSize=\"small\" />\n                                )}\n                            </ListItemIcon>\n                            <Typography variant=\"inherit\">\n                                {isRemovalClicked ? 'Are you sure?' : 'Delete Team'}\n                            </Typography>\n                        </MenuItem>\n                    </Menu>\n                </ListItemSecondaryAction>\n            </ListItem>\n            {Object.values(team.members).length > 0 && (\n                <Collapse in={isListOpen} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding dense>\n                        {Object.values(team.members).map((memberId) => {\n                            const memberLabel = `${members[memberId].firstName} ${members[memberId].lastName}`;\n                            return (\n                                <ListItem key={memberId} button disableRipple>\n                                    <ListItemIcon>\n                                        <Person />\n                                    </ListItemIcon>\n                                    <ListItemText primary={memberLabel} />\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </Collapse>\n            )}\n        </React.Fragment>\n    );\n};\n","export function not(a: string[], b: string[]) {\n    return a.filter((value) => b.indexOf(value) === -1);\n}\n\nexport function intersection(a: string[], b: string[]) {\n    return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nexport function union(a: string[], b: string[]) {\n    return [...a, ...not(b, a)];\n}\n","import {\n    Button,\n    Card,\n    CardHeader,\n    Checkbox,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n} from '@material-ui/core';\nimport { ChevronLeft, ChevronRight } from '@material-ui/icons';\nimport React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { manageTeamMembersInDB } from '../../actions/teams';\nimport { RootStateType } from '../../reducers';\nimport { intersection, not, union } from './utils';\n\nexport type MembersTransferListProps = {\n    activeTeam: string;\n    onClose: VoidFunction;\n};\n\nexport const MembersTransferList: React.FC<MembersTransferListProps> = ({\n    activeTeam,\n    onClose,\n}) => {\n    const { teams, authUser, members } = useSelector((state: RootStateType) => state);\n    const [checked, setChecked] = React.useState<string[]>([]);\n\n    const activeTeamMembers = useMemo(() => teams[activeTeam].members, [activeTeam, teams]);\n    const allMembers = useMemo(() => Object.keys(members), [members]);\n    const availableMembers = useMemo(\n        () => allMembers.filter((member) => !activeTeamMembers.includes(member)),\n        [allMembers, activeTeamMembers]\n    );\n\n    const dispatch = useDispatch();\n\n    const availableMembersChecked = intersection(checked, availableMembers);\n    const activeTeamMembersChecked = intersection(checked, activeTeamMembers);\n\n    const handleToggle = (value: string) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n    };\n\n    const numberOfChecked = (items: string[]) => intersection(checked, items).length;\n\n    const handleToggleAll = (items: string[]) => () => {\n        if (numberOfChecked(items) === items.length) {\n            setChecked(not(checked, items));\n        } else {\n            setChecked(union(checked, items));\n        }\n    };\n\n    const handleAddMembers = () => {\n        const newMembers = [...activeTeamMembers, ...availableMembersChecked];\n        if (authUser) {\n            dispatch(manageTeamMembersInDB(authUser, activeTeam, newMembers));\n        }\n        setChecked([]);\n    };\n\n    const handleRemoveMembers = () => {\n        const newMembers = activeTeamMembers.filter(\n            (member) => !activeTeamMembersChecked.includes(member)\n        );\n        if (authUser) {\n            dispatch(manageTeamMembersInDB(authUser, activeTeam, newMembers));\n        }\n        setChecked([]);\n    };\n\n    const customList = (title: React.ReactNode, items: string[]) => (\n        <Card>\n            <CardHeader\n                avatar={\n                    <Checkbox\n                        onClick={handleToggleAll(items)}\n                        color=\"primary\"\n                        checked={numberOfChecked(items) === items.length && items.length !== 0}\n                        indeterminate={\n                            numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0\n                        }\n                        disabled={items.length === 0}\n                        inputProps={{ 'aria-label': 'all items selected' }}\n                    />\n                }\n                title={title}\n                subheader={`${numberOfChecked(items)}/${items.length} selected`}\n            />\n            <Divider />\n            <List dense component=\"div\" role=\"list\" classes={{ root: 'members-management__list' }}>\n                {items.map((memberId: string) => {\n                    const memberLabel = `${members[memberId].firstName} ${members[memberId].lastName}`;\n                    return (\n                        <ListItem\n                            key={memberId}\n                            role=\"listitem\"\n                            button\n                            onClick={handleToggle(memberId)}\n                        >\n                            <ListItemIcon>\n                                <Checkbox\n                                    checked={checked.indexOf(memberId) !== -1}\n                                    color=\"primary\"\n                                    tabIndex={-1}\n                                    disableRipple\n                                    inputProps={{ 'aria-labelledby': memberId }}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={memberId} primary={memberLabel} />\n                        </ListItem>\n                    );\n                })}\n                <ListItem />\n            </List>\n        </Card>\n    );\n\n    return (\n        <React.Fragment>\n            <DialogTitle>Manage team members</DialogTitle>\n            <DialogContent>\n                <Grid\n                    container\n                    spacing={2}\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    classes={{ root: 'members-management__body' }}\n                >\n                    <Grid item>{customList('Available members', availableMembers)}</Grid>\n                    <Grid item>\n                        <Grid container direction=\"column\" alignItems=\"center\">\n                            <IconButton\n                                edge=\"end\"\n                                size=\"small\"\n                                onClick={handleAddMembers}\n                                disabled={availableMembersChecked.length === 0}\n                            >\n                                <ChevronRight />\n                            </IconButton>\n                            <IconButton\n                                edge=\"end\"\n                                size=\"small\"\n                                onClick={handleRemoveMembers}\n                                disabled={activeTeamMembersChecked.length === 0}\n                            >\n                                <ChevronLeft />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                    <Grid item>{customList('Team members', activeTeamMembers)}</Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </React.Fragment>\n    );\n};\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    List,\n    ListSubheader,\n    TextField,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { receiveSelection } from '../../actions/selection';\nimport { addTeamToDB } from '../../actions/teams';\nimport { RootStateType } from '../../reducers';\nimport { DrawerListWrapper } from './DrawerListWrapper';\nimport { DrawerTeamsListItem } from './DrawerTeamsListItem';\nimport { MembersTransferList } from './MembersTransferList';\n\nexport const DrawerTeamsList: React.FC = () => {\n    const [teamName, setTeamName] = useState<string>('');\n    const [activeTeam, setActiveTeam] = useState<string | null>(null);\n    const { teams, authUser, selection } = useSelector((state: RootStateType) => state);\n    const dispatch = useDispatch();\n\n    const handleAddTeam = (handleClose: VoidFunction) => {\n        if (authUser && teamName !== '') {\n            dispatch(addTeamToDB(authUser, teamName));\n        }\n        handleClose();\n    };\n\n    const handleClearData = () => {\n        setTeamName('');\n    };\n\n    const handleSelectTeam = (id: string, checked: boolean) => {\n        const newSelection = checked\n            ? [...selection.selection, id]\n            : selection.selection.filter((member) => member !== id);\n        dispatch(receiveSelection(newSelection));\n    };\n\n    const renderAddDialogContent = (handleClose: VoidFunction) => {\n        return (\n            <React.Fragment>\n                <DialogTitle>Add Team</DialogTitle>\n                <form onSubmit={() => handleAddTeam(handleClose)}>\n                    <DialogContent>\n                        <DialogContentText>\n                            To add team, please enter new team name:\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            onChange={(event) => setTeamName(event.target.value)}\n                            margin=\"dense\"\n                            label=\"Team Name\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button\n                            onClick={() => handleAddTeam(handleClose)}\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={teamName === ''}\n                        >\n                            Add new team\n                        </Button>\n                    </DialogActions>\n                </form>\n            </React.Fragment>\n        );\n    };\n\n    return (\n        <DrawerListWrapper\n            addButtonLabel=\"Add new team\"\n            onClearData={handleClearData}\n            onRenderAddDialogContent={renderAddDialogContent}\n        >\n            <ListSubheader component=\"div\">Teams</ListSubheader>\n            <List classes={{ root: 'drawer-list__content' }} component=\"div\">\n                {Object.values(teams).map((team, teamIndex) => (\n                    <DrawerTeamsListItem\n                        onManageMembers={setActiveTeam}\n                        key={teamIndex}\n                        team={team}\n                        selected={selection.selection.includes(team.id)}\n                        onPrimaryAction={(checked: boolean) => handleSelectTeam(team.id, checked)}\n                    />\n                ))}\n            </List>\n\n            <Dialog\n                open={!!activeTeam}\n                onClose={() => setActiveTeam(null)}\n                classes={{ paper: 'drawer-tab__dialog' }}\n            >\n                {activeTeam && (\n                    <MembersTransferList\n                        activeTeam={activeTeam}\n                        onClose={() => setActiveTeam(null)}\n                    />\n                )}\n            </Dialog>\n        </DrawerListWrapper>\n    );\n};\n","import { Paper, Tab, Tabs } from '@material-ui/core';\nimport { Group, Person } from '@material-ui/icons';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeSelectionType, SelectionType } from '../../actions/selection';\nimport { RootStateType } from '../../reducers';\nimport { TabContent } from '../TabContent/TabContent';\nimport { DrawerMembersList } from './DrawerMembersList';\nimport { DrawerTeamsList } from './DrawerTeamsList';\n\nexport type DrawerUserContentProps = {\n    closeButton: React.ReactElement;\n};\n\nexport const DrawerUserContent: React.FC<DrawerUserContentProps> = ({ closeButton }) => {\n    const selectionType = useSelector((state: RootStateType) => state.selection.selectionType);\n    const dispatch = useDispatch();\n\n    const handleChange = (_e: React.ChangeEvent<{}>, tabValue: SelectionType) => {\n        dispatch(changeSelectionType(tabValue));\n    };\n\n    return (\n        <React.Fragment>\n            <div className={'drawer__bar-container'}>\n                <Paper square classes={{ root: 'drawer__bar' }}>\n                    <Tabs\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        value={selectionType}\n                        onChange={handleChange}\n                        classes={{ root: 'drawer__tabs' }}\n                    >\n                        <Tab label={<Group />} value={SelectionType.Teams} />\n                        <Tab label={<Person />} value={SelectionType.Members} />\n                    </Tabs>\n                    <div className={'drawer__close-button-wrapper'}>{closeButton}</div>\n                </Paper>\n            </div>\n            <TabContent<SelectionType> value={selectionType} index={SelectionType.Teams}>\n                <DrawerTeamsList />\n            </TabContent>\n            <TabContent<SelectionType> value={selectionType} index={SelectionType.Members}>\n                <DrawerMembersList />\n            </TabContent>\n        </React.Fragment>\n    );\n};\n","import { Container, Drawer, DrawerProps, IconButton } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootStateType } from '../../reducers';\nimport { DrawerSignUpContent } from './DrawerSignUpContent';\nimport { DrawerUserContent } from './DrawerUserContent';\n\nexport type TeamsDrawerProps = {\n    anchor?: DrawerProps['anchor'];\n    isOpen: boolean;\n    onShowLoginModal: VoidFunction;\n    onClose: VoidFunction;\n};\n\nexport const TeamsDrawer: React.FC<TeamsDrawerProps> = ({\n    anchor,\n    isOpen,\n    onClose,\n    onShowLoginModal,\n}) => {\n    const authUser = useSelector((state: RootStateType) => state.authUser);\n\n    const renderCloseButton = useMemo(\n        () => (\n            <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={onClose}\n                classes={{ root: 'drawer__close-button' }}\n            >\n                <Close />\n            </IconButton>\n        ),\n        [onClose]\n    );\n\n    return (\n        <Drawer anchor={anchor} open={isOpen} onClose={onClose} classes={{ root: 'drawer' }}>\n            <Container classes={{ root: 'drawer__wrapper' }}>\n                {authUser ? (\n                    <DrawerUserContent closeButton={renderCloseButton} />\n                ) : (\n                    <DrawerSignUpContent\n                        closeButton={renderCloseButton}\n                        onShowLoginModal={onShowLoginModal}\n                    />\n                )}\n            </Container>\n        </Drawer>\n    );\n};\n","import React, { Dispatch } from 'react';\nimport { connect } from 'react-redux';\nimport { signOut, UserData } from './actions/authUser';\nimport { handleInitialData } from './actions/shared';\nimport { AnonymousDialog } from './components/AnonymousDialog/AnonymousDialog';\nimport { Header } from './components/Header/Header';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { MainApp } from './components/MainApp/MainApp';\nimport { TeamsDrawer } from './components/TeamsDrawer/TeamsDrawer';\nimport { RootStateType } from './reducers';\nimport { auth } from './utils/firebase';\n\nexport type AppWrapperProps = {\n    authUser: UserData;\n    dispatch: Dispatch<any>;\n};\n\nexport type AppWrapperState = {\n    isDrawerVisible: boolean;\n    isModalVisible: boolean;\n};\n\nclass AppWrapper extends React.Component<AppWrapperProps, AppWrapperState> {\n    state = {\n        isDrawerVisible: false,\n        isModalVisible: false,\n    };\n\n    componentDidMount() {\n        this.props.dispatch(handleInitialData());\n    }\n\n    private handleToggleDrawer = (isDrawerVisible: boolean) => {\n        this.setState({ isDrawerVisible });\n    };\n\n    private handleShowLoginModal = (isModalVisible: boolean) => {\n        if (!this.props.authUser) {\n            this.setState({ isDrawerVisible: false, isModalVisible });\n        }\n    };\n\n    private handleLogOut = () => {\n        if (this.props.authUser) {\n            auth.signOut()\n                .then(() => {\n                    this.props.dispatch(signOut());\n                })\n                .catch((error) => {\n                    console.error('error signing out', error);\n                });\n        }\n    };\n\n    render() {\n        const { authUser } = this.props;\n        const { isDrawerVisible, isModalVisible } = this.state;\n        return (\n            <React.Fragment>\n                <Header\n                    onToggleDrawer={() => this.handleToggleDrawer(true)}\n                    onShowLoginModal={() => this.handleShowLoginModal(true)}\n                    onLogOut={this.handleLogOut}\n                />\n                <TeamsDrawer\n                    isOpen={isDrawerVisible}\n                    onShowLoginModal={() => this.handleShowLoginModal(true)}\n                    onClose={() => this.handleToggleDrawer(false)}\n                />\n                {!authUser && (\n                    <AnonymousDialog\n                        isOpen={isModalVisible}\n                        onClose={() => this.handleShowLoginModal(false)}\n                    />\n                )}\n                {authUser ? (\n                    <MainApp />\n                ) : (\n                    <HomePage onShowLoginModal={() => this.handleShowLoginModal(true)} />\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootStateType) => ({\n    authUser: state.authUser,\n});\n\nexport const App = connect(mapStateToProps)(AppWrapper);\n","import { Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { RootStateActions } from '../reducers';\r\nimport { auth, firebaseGenerateUserDocument } from '../utils/firebase';\r\nimport { signIn, signOut } from './authUser';\r\nimport { receiveMembers } from './members';\r\nimport { receiveTeams } from './teams';\r\n\r\nexport const handleInitialData = (): ThunkAction<void, {}, {}, RootStateActions> => (\r\n    dispatch: Dispatch<RootStateActions>\r\n) => {\r\n    auth.onAuthStateChanged(async (authUser) => {\r\n        const authUserData = await firebaseGenerateUserDocument(authUser);\r\n        if (authUserData) {\r\n            dispatch(\r\n                signIn({\r\n                    displayName: authUserData.displayName,\r\n                    email: authUserData.email,\r\n                    uid: authUserData.uid,\r\n                })\r\n            );\r\n            dispatch(receiveMembers(authUserData.members));\r\n            dispatch(receiveTeams(authUserData.teams));\r\n        }\r\n        if (!authUserData) {\r\n            dispatch(signOut());\r\n        }\r\n    });\r\n};\r\n","import { applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { logger } from './logger';\r\n\r\nexport const middleware = applyMiddleware(thunk, logger);\r\n","// tslint:disable: no-console\r\nexport const logger = (store: { getState: () => any; }) => (next: (arg0: any) => any) => (action: { type: any; }) => {\r\n    console.group(action.type);\r\n    console.log('The action is', action);\r\n    const returnValue = next(action);\r\n    console.log('The new state:', store.getState());\r\n    console.groupEnd();\r\n    return returnValue;\r\n};\r\n","import { AuthUserActions, AuthUserActionType } from '../actions/authUser';\r\nimport { MemberActions, Members, MembersActionType } from '../actions/members';\r\n\r\nconst initialMembersState: Members = {};\r\n\r\nexport const members = (state = initialMembersState, action: MemberActions | AuthUserActions): Members => {\r\n    switch (action.type) {\r\n        case MembersActionType.ReceiveMembers:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case MembersActionType.AddMember:\r\n            return {\r\n                ...state,\r\n                [action.payload.id]: action.payload,\r\n            };\r\n        case MembersActionType.RemoveMember:\r\n            const { [action.payload]: toRemove, ...rest } = state;\r\n            return {\r\n                ...rest,\r\n            };\r\n        case AuthUserActionType.UnsetAuthedUser:\r\n            return initialMembersState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    Selection,\r\n    SelectionActions,\r\n    SelectionActionType,\r\n    SelectionType,\r\n} from '../actions/selection';\r\n\r\nconst initialSelectionState: Selection = {\r\n    selection: [],\r\n    selectionType: SelectionType.Teams,\r\n};\r\n\r\nexport const selection = (state = initialSelectionState, action: SelectionActions): Selection => {\r\n    switch (action.type) {\r\n        case SelectionActionType.ReceiveSelection: {\r\n            return {\r\n                ...state,\r\n                selection: action.payload,\r\n            };\r\n        }\r\n        case SelectionActionType.ChangeSelectionType: {\r\n            return {\r\n                selectionType: action.payload,\r\n                selection: [],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { AuthUserActions, AuthUserActionType } from '../actions/authUser';\nimport { MemberActions, MembersActionType } from '../actions/members';\nimport { TeamActions, TeamActionType, Teams } from '../actions/teams';\nimport { removeMemberFromTeams } from '../utils/helpers';\n\nconst initialTeamsState: Teams = {};\n\nexport const teams = (\n    state = initialTeamsState,\n    action: TeamActions | MemberActions | AuthUserActions\n): Teams => {\n    switch (action.type) {\n        case TeamActionType.ReceiveTeams: {\n            return {\n                ...state,\n                ...action.payload,\n            };\n        }\n        case TeamActionType.AddTeam: {\n            return {\n                ...state,\n                [action.payload.id]: action.payload,\n            };\n        }\n        case TeamActionType.RemoveTeam: {\n            const { [action.payload]: teamToRemove, ...rest } = state;\n            return {\n                ...rest,\n            };\n        }\n        case TeamActionType.ManageTeamMembers: {\n            const { teamId, members } = action.payload;\n            return {\n                ...state,\n                [teamId]: {\n                    ...state[teamId],\n                    members,\n                },\n            };\n        }\n        case MembersActionType.RemoveMember: {\n            return removeMemberFromTeams(state, action.payload);\n        }\n        case AuthUserActionType.UnsetAuthedUser:\n            return initialTeamsState;\n        default:\n            return state;\n    }\n};\n","import { combineReducers, Reducer } from 'redux';\r\nimport { AuthUserActions, UserData } from '../actions/authUser';\r\nimport { MemberActions, Members } from '../actions/members';\r\nimport { Selection, SelectionActions } from '../actions/selection';\r\nimport { TeamActions, Teams } from '../actions/teams';\r\nimport { authUser } from './authUser';\r\nimport { members } from './members';\r\nimport { selection } from './selection';\r\nimport { teams } from './teams';\r\n\r\nexport type RootStateType = {\r\n    teams: Teams;\r\n    members: Members;\r\n    selection: Selection;\r\n    authUser: UserData;\r\n};\r\nexport type RootStateActions = TeamActions | MemberActions | AuthUserActions | SelectionActions;\r\n\r\nexport const rootReducer: Reducer<RootStateType, RootStateActions> = combineReducers({\r\n    authUser,\r\n    members,\r\n    teams,\r\n    selection,\r\n});\r\n","import { AuthUserActions, AuthUserActionType, UserData } from '../actions/authUser';\r\n\r\nconst defautAuthUserState: UserData = null;\r\n\r\nexport const authUser = (state: UserData = defautAuthUserState, action: AuthUserActions): UserData => {\r\n    switch (action.type) {\r\n        case AuthUserActionType.SetAuthedUser:\r\n            return action.payload;\r\n        case AuthUserActionType.UnsetAuthedUser:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready\r\n                    .then(() => {\r\n                        console.log(\r\n                            'This web app is being served cache-first by a service ' +\r\n                                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                        );\r\n                    })\r\n                    .catch(console.error);\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready\r\n                    .then((registration) => {\r\n                        registration\r\n                            .unregister()\r\n                            .then(() => {\r\n                                window.location.reload();\r\n                            })\r\n                            .catch(console.error);\r\n                    })\r\n                    .catch(console.error);\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister().catch(console.error);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","// tslint:disable-next-line:ordered-imports\r\nimport React from 'react';\r\nimport 'react-app-polyfill/ie11';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { App } from './App';\r\nimport { middleware } from './middleware';\r\nimport { rootReducer } from './reducers';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './styles/css/index.css';\r\n\r\nconst store = createStore(rootReducer, middleware);\r\n\r\nReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}